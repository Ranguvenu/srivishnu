{"version":3,"sources":["../src/deletecategory.js"],"names":["define","$","Str","ModalFactory","ModalEvents","Fragment","Ajax","Y","DelCategory","selector","contextid","categoryid","self","init","prototype","modal","console","log","get_string","then","title","create","type","types","SAVE_CANCEL","body","getBody","bind","show","setLarge","getRoot","on","hidden","setBody","shown","append","save","submitForm","submitFormAjax","formdata","params","jsonformdata","JSON","stringify","loadFragment","handleFormSubmissionResponse","hide","use","M","core_formchangechecker","reset_form_dirty_state","document","location","reload","handleFormSubmissionFailure","data","e","preventDefault","formData","find","serialize","call","methodname","args","done","fail","submit","load"],"mappings":"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","sourcesContent":["/**\r\n * Add a create new group modal to the page.\r\n *\r\n * @module     local_courses/newcourse\r\n * @class      NewCourse\r\n * @package    local_courses\r\n * @copyright  2017 Shivani\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\ndefine(['jquery', 'core/str', 'core/modal_factory', 'core/modal_events', 'core/fragment', 'core/ajax', 'core/yui'],\r\n        function($, Str, ModalFactory, ModalEvents, Fragment, Ajax, Y) {\r\n \r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {String} selector used to find triggers for the new group modal.\r\n     * @param {int} contextid\r\n     *\r\n     * Each call to init gets it's own instance of this class.\r\n     */\r\n    var DelCategory = function(selector, contextid, categoryid) {\r\n        \r\n        this.contextid = contextid;\r\n        this.categoryid = categoryid;\r\n       \r\n        var self = this;\r\n        self.init(selector);\r\n    };\r\n \r\n    /**\r\n     * @var {Modal} modal\r\n     * @private\r\n     */\r\n    DelCategory.prototype.modal = null;\r\n \r\n    /**\r\n     * @var {int} contextid\r\n     * @private\r\n     */\r\n    DelCategory.prototype.contextid = -1;\r\n \r\n    /**\r\n     * Initialise the class.\r\n     *\r\n     * @param {String} selector used to find triggers for the new group modal.\r\n     * @private\r\n     * @return {Promise}\r\n     */\r\n    DelCategory.prototype.init = function(selector) {\r\n        //var triggers = $(selector);\r\n        var self = this;\r\n        // Fetch the title string.\r\n        //$(selector).click(function(){\r\n            \r\n            //var editid = $(this).data(\"value\");\r\n            //if(typeof this.editid != 'undefined'){\r\n            //        editid=0;\r\n            //}\r\n            // self.categoryid = editid;\r\n              //alert(self.courseid);\r\n             console.log(self.categoryid);\r\n            return Str.get_string('deletecategory', 'local_courses').then(function(title) {\r\n                // Create the modal.\r\n                return ModalFactory.create({\r\n                    type: ModalFactory.types.SAVE_CANCEL,\r\n                    title: title,\r\n                    body: self.getBody()\r\n                });\r\n            }.bind(self)).then(function(modal) {\r\n                \r\n                // Keep a reference to the modal.\r\n                self.modal = modal;\r\n                self.modal.show();\r\n                // Forms are big, we want a big modal.\r\n                self.modal.setLarge();\r\n     \r\n                // We want to reset the form every time it is opened.\r\n                self.modal.getRoot().on(ModalEvents.hidden, function() {\r\n                    self.modal.setBody('');\r\n                }.bind(this));\r\n    \r\n                // We want to hide the submit buttons every time it is opened.\r\n                self.modal.getRoot().on(ModalEvents.shown, function() {\r\n                    self.modal.getRoot().append('<style>[data-fieldtype=submit] { display: none ! important; }</style>');\r\n                }.bind(this));\r\n     \r\n    \r\n                // We catch the modal save event, and use it to submit the form inside the modal.\r\n                // Triggering a form submission will give JS validation scripts a chance to check for errors.\r\n                self.modal.getRoot().on(ModalEvents.save, self.submitForm.bind(self));\r\n                // We also catch the form submit event and use it to submit the form with ajax.\r\n                self.modal.getRoot().on('submit', 'form', self.submitFormAjax.bind(self));\r\n                return this.modal;\r\n            }.bind(this));       \r\n        \r\n        \r\n        //});\r\n        \r\n    };\r\n \r\n    /**\r\n     * @method getBody\r\n     * @private\r\n     * @return {Promise}\r\n     */\r\n    DelCategory.prototype.getBody = function(formdata) {\r\n        if (typeof formdata === \"undefined\") {\r\n            formdata = {};\r\n        }\r\n        // Get the content of the modal.\r\n        if(typeof this.categoryid != 'undefined'){\r\n            var params = {categoryid:this.categoryid, jsonformdata: JSON.stringify(formdata)};\r\n        }else{\r\n            var params = {};\r\n        }\r\n        //var params = {categoryid:this.categoryid, jsonformdata: JSON.stringify(formdata)};\r\n        return Fragment.loadFragment('local_courses', 'deletecategory_form', this.contextid, params);\r\n    };\r\n \r\n    /**\r\n     * @method handleFormSubmissionResponse\r\n     * @private\r\n     * @return {Promise}\r\n     */\r\n    DelCategory.prototype.handleFormSubmissionResponse = function() {\r\n        this.modal.hide();\r\n        // We could trigger an event instead.\r\n        // Yuk.\r\n        Y.use('moodle-core-formchangechecker', function() {\r\n            M.core_formchangechecker.reset_form_dirty_state();\r\n        });\r\n        document.location.reload();\r\n    };\r\n \r\n    /**\r\n     * @method handleFormSubmissionFailure\r\n     * @private\r\n     * @return {Promise}\r\n     */\r\n    DelCategory.prototype.handleFormSubmissionFailure = function(data) {\r\n        // Oh noes! Epic fail :(\r\n        // Ah wait - this is normal. We need to re-display the form with errors!\r\n        this.modal.setBody(this.getBody(data));\r\n    };\r\n \r\n    /**\r\n     * Private method\r\n     *\r\n     * @method submitFormAjax\r\n     * @private\r\n     * @param {Event} e Form submission event.\r\n     */\r\n    DelCategory.prototype.submitFormAjax = function(e) {\r\n        // We don't want to do a real form submission.\r\n        e.preventDefault();\r\n \r\n        // Convert all the form elements values to a serialised string.\r\n        var formData = this.modal.getRoot().find('form').serialize();\r\n        //console.log(this.contextid);\r\n        console.log(formData);\r\n        // Now we can continue...\r\n        Ajax.call([{\r\n            methodname: 'local_courses_submit_delete_category_form',\r\n            //args: {evalid:this.evalid, contextid: this.contextid, jsonformdata: JSON.stringify(formData)},\r\n            args: {contextid: this.contextid, jsonformdata: JSON.stringify(formData),categoryid:this.categoryid},\r\n            done: this.handleFormSubmissionResponse.bind(this, formData),\r\n            fail: this.handleFormSubmissionFailure.bind(this, formData)\r\n        }]);\r\n    };\r\n \r\n    /**\r\n     * This triggers a form submission, so that any mform elements can do final tricks before the form submission is processed.\r\n     *\r\n     * @method submitForm\r\n     * @param {Event} e Form submission event.\r\n     * @private\r\n     */\r\n    DelCategory.prototype.submitForm = function(e) {\r\n        e.preventDefault();\r\n        var self = this;\r\n        self.modal.getRoot().find('form').submit();\r\n    };\r\n \r\n    return /** @alias module:local_evaluation/newevaluation */ {\r\n        // Public variables and functions.\r\n        /**\r\n         * Attach event listeners to initialise this module.\r\n         *\r\n         * @method init\r\n         * @param {string} selector The CSS selector used to find nodes that will trigger this module.\r\n         * @param {int} contextid The contextid for the course.\r\n         * @return {Promise}\r\n         */\r\n        init: function(args) {\r\n            return new DelCategory(args.selector, args.contextid,args.categoryid);\r\n        },\r\n        load: function() {\r\n        }\r\n    };\r\n});\r\n"],"file":"deletecategory.min.js"}