{"version":3,"sources":["../src/newassignrole.js"],"names":["define","$","Str","ModalFactory","ModalEvents","Fragment","Ajax","Y","NewAssignrole","args","contextid","roleid","rolename","self","init","selector","prototype","modal","get_string","then","title","create","type","types","DEFAULT","body","getBody","footer","getFooter","bind","setLarge","getRoot","addClass","on","hidden","animate","setTimeout","destroy","shown","append","find","submitForm","hide","submitFormAjax","show","formdata","params","jsonformdata","JSON","stringify","loadFragment","handleFormSubmissionResponse","use","M","core_formchangechecker","reset_form_dirty_state","document","location","reload","handleFormSubmissionFailure","data","setBody","$footer","e","preventDefault","formData","serialize","call","methodname","done","fail","submit","load","costcentervalue","val","ajax","method","dataType","url","cfg","wwwroot","success","template","each","index","value","id","fullname","html"],"mappings":"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","sourcesContent":["/**\r\n * Add a create new group modal to the page.\r\n *\r\n * @module     local_location/location\r\n * @class      NewInstitute\r\n * @package    local_location\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\ndefine(['jquery', 'core/str', 'core/modal_factory', 'core/modal_events', 'core/fragment', 'core/ajax', 'core/yui'],\r\n        function($, Str, ModalFactory, ModalEvents, Fragment, Ajax, Y) {\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {String} selector used to find triggers for the new group modal.\r\n     * @param {int} contextid\r\n     *\r\n     * Each call to init gets it's own instance of this class.\r\n     */\r\n    var NewAssignrole = function(args) {\r\n        this.contextid = args.contextid;\r\n\r\n\r\n        this.roleid = args.roleid;\r\n\r\n        this.rolename = args.rolename;\r\n        // alert(args.roleid);\r\n        var self = this;\r\n        self.init(args.selector);\r\n    };\r\n\r\n    /**\r\n     * @var {Modal} modal\r\n     * @private\r\n     */\r\n    NewAssignrole.prototype.modal = null;\r\n\r\n    /**\r\n     * @var {int} contextid\r\n     * @private\r\n     */\r\n    NewAssignrole.prototype.contextid = -1;\r\n\r\n    /**\r\n     * Initialise the class.\r\n     *\r\n     * @param {String} selector used to find triggers for the new group modal.\r\n     * @private\r\n     * @return {Promise}\r\n     */\r\n    NewAssignrole.prototype.init = function(args) {\r\n        // console.log(args);\r\n        //var triggers = $(selector);\r\n        var self = this;\r\n\r\n\r\n\r\n        // Fetch the title string.\r\n        // $('.'+args.selector).click(function(){\r\n\r\n\r\n            // var editid = $(this).data('value');\r\n            // if (editid) {\r\n            //     self.roleid = editid;\r\n            //     // console.log(self.roleid);\r\n            //     // alert(self.roleid);\r\n            // }\r\n            // console.log(self);\r\n            // alert(self);\r\n            return Str.get_string('assignrole', 'local_assignroles',self).then(function(title) {\r\n                // Create the modal.\r\n                return ModalFactory.create({\r\n                    type: ModalFactory.types.DEFAULT,\r\n                    title: title,\r\n                    body: self.getBody(),\r\n                    footer: self.getFooter(),\r\n                });\r\n            }.bind(self)).then(function(modal) {\r\n\r\n                // Keep a reference to the modal.\r\n                self.modal = modal;\r\n                // self.modal.show();\r\n                // Forms are big, we want a big modal.\r\n                self.modal.setLarge();\r\n                this.modal.getRoot().addClass('openLMStransition');\r\n\r\n                // We want to reset the form every time it is opened.\r\n                this.modal.getRoot().on(ModalEvents.hidden, function() {\r\n                    this.modal.getRoot().animate({\"right\":\"-85%\"}, 500);\r\n                    setTimeout(function(){\r\n                        modal.destroy();\r\n                    }, 1000);\r\n                }.bind(this));\r\n\r\n                // We want to hide the submit buttons every time it is opened.\r\n                self.modal.getRoot().on(ModalEvents.shown, function() {\r\n                    self.modal.getRoot().append('<style>[data-fieldtype=submit] { display: none ! important; }</style>');\r\n                    // this.modal.getFooter().find('[data-action=\"cancel\"]').on('click', function() {\r\n                    //     modal.hide();\r\n                    //     setTimeout(function(){\r\n                    //         modal.destroy();\r\n                    //     }, 1000);\r\n                    //     // modal.destroy();\r\n                    // });\r\n                }.bind(this));\r\n\r\n                this.modal.getFooter().find('[data-action=\"save\"]').on('click', this.submitForm.bind(this));\r\n\r\n                this.modal.getFooter().find('[data-action=\"cancel\"]').on('click', function() {\r\n                    modal.hide();\r\n                    modal.destroy();\r\n                });\r\n\r\n\r\n                // We catch the modal save event, and use it to submit the form inside the modal.\r\n                // Triggering a form submission will give JS validation scripts a chance to check for errors.\r\n                // self.modal.getRoot().on(ModalEvents.save, self.submitForm.bind(self));\r\n                // We also catch the form submit event and use it to submit the form with ajax.\r\n                self.modal.getRoot().on('submit', 'form', self.submitFormAjax.bind(self));\r\n                self.modal.show();\r\n                this.modal.getRoot().animate({\"right\":\"0%\"}, 500);\r\n                return this.modal;\r\n            }.bind(this));\r\n\r\n\r\n        // });\r\n\r\n    };\r\n\r\n    /**\r\n     * @method getBody\r\n     * @private\r\n     * @return {Promise}\r\n     */\r\n    NewAssignrole.prototype.getBody = function(formdata) {\r\n        if (typeof formdata === \"undefined\") {\r\n            formdata = {};\r\n        }\r\n        // alert(formdata);\r\n        // Get the content of the modal.\r\n        var params = {roleid:this.roleid, jsonformdata: JSON.stringify(formdata)};\r\n        return Fragment.loadFragment('local_assignroles', 'new_assignrole', this.contextid, params);\r\n    };\r\n\r\n    /**\r\n     * @method handleFormSubmissionResponse\r\n     * @private\r\n     * @return {Promise}\r\n     */\r\n    NewAssignrole.prototype.handleFormSubmissionResponse = function() {\r\n        this.modal.hide();\r\n        // We could trigger an event instead.\r\n        // Yuk.\r\n        Y.use('moodle-core-formchangechecker', function() {\r\n            M.core_formchangechecker.reset_form_dirty_state();\r\n        });\r\n        document.location.reload();\r\n    };\r\n\r\n    /**\r\n     * @method handleFormSubmissionFailure\r\n     * @private\r\n     * @return {Promise}\r\n     */\r\n    NewAssignrole.prototype.handleFormSubmissionFailure = function(data) {\r\n        // Oh noes! Epic fail :(\r\n        // Ah wait - this is normal. We need to re-display the form with errors!\r\n        this.modal.setBody(this.getBody(data));\r\n    };\r\n\r\n    /**\r\n     * @method getFooter\r\n     * @private\r\n     * @return {Promise}\r\n     */\r\n    NewAssignrole.prototype.getFooter = function() {\r\n        $footer = '<button type=\"button\" class=\"btn btn-primary\" data-action=\"save\">Assign</button>&nbsp;';\r\n        $footer += '<button type=\"button\" class=\"btn btn-secondary\" data-action=\"cancel\">Cancel</button>';\r\n        return $footer;\r\n    };\r\n\r\n    /**\r\n     * Private method\r\n     *\r\n     * @method submitFormAjax\r\n     * @private\r\n     * @param {Event} e Form submission event.\r\n     */\r\n    NewAssignrole.prototype.submitFormAjax = function(e) {\r\n        // We don't want to do a real form submission.\r\n        e.preventDefault();\r\n\r\n        // Convert all the form elements values to a serialised string.\r\n        var formData = this.modal.getRoot().find('form').serialize();\r\n        // alert(this.contextid);\r\n        // Now we can continue...\r\n        Ajax.call([{\r\n            methodname: 'local_assignroles_submit_assignrole_form',\r\n            args: {contextid: this.contextid, roleid:this.roleid, jsonformdata: JSON.stringify(formData)},\r\n            done: this.handleFormSubmissionResponse.bind(this, formData),\r\n            fail: this.handleFormSubmissionFailure.bind(this, formData)\r\n        }]);\r\n    };\r\n\r\n    /**\r\n     * This triggers a form submission, so that any mform elements can do final tricks before the form submission is processed.\r\n     *\r\n     * @method submitForm\r\n     * @param {Event} e Form submission event.\r\n     * @private\r\n     */\r\n    NewAssignrole.prototype.submitForm = function(e) {\r\n        e.preventDefault();\r\n        var self = this;\r\n        self.modal.getRoot().find('form').submit();\r\n    };\r\n\r\n    return /** @alias module:local_location/newlocation */ {\r\n        // Public variables and functions.\r\n        /**\r\n         * Attach event listeners to initialise this module.\r\n         *\r\n         * @method init\r\n         * @param {string} selector The CSS selector used to find nodes that will trigger this module.\r\n         * @param {int} contextid The contextid for the course.\r\n         * @return {Promise}\r\n         */\r\n        init: function(args) {\r\n\r\n            // alert(args.contextid);\r\n            return new NewAssignrole(args);\r\n        },\r\n        load: function(){\r\n             $(document).on('change', '#id_costcenter', function() {\r\n                var costcentervalue = $(this).find(\"option:selected\").val();\r\n                var roleid = $(\"input[name=roleid]\").val();\r\n\r\n                if (costcentervalue !== null) {\r\n                    $.ajax({\r\n                        method: \"GET\",\r\n                        dataType: \"json\",\r\n                        url: M.cfg.wwwroot + \"/local/assignroles/ajax.php?action=userview&costcenter=\"+costcentervalue+\"&roleid=\"+roleid,\r\n                        success: function(data){\r\n                            var template = '<option value = 0>--Select Users--</option>';\r\n\r\n                              $.each(data.data, function( index, value) {\r\n                                   template +=  '<option value = ' + value.id + ' >' +value.fullname + '</option>';\r\n                              });\r\n                            $(\"#id_users\").html(template);\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n\r\n        }\r\n    };\r\n});"],"file":"newassignrole.min.js"}