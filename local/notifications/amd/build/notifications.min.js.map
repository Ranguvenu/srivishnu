{"version":3,"sources":["../src/notifications.js"],"names":["define","$","Str","ModalFactory","ModalEvents","Fragment","Ajax","Y","NewNotification","args","notificationid","instance","plugin","contextid","context","id","self","init","prototype","modal","head","get_string","then","title","create","type","types","DEFAULT","body","getBody","footer","getFooter","bind","setLarge","getRoot","addClass","on","hidden","animate","destroy","find","submitForm","hide","setTimeout","form_status","data","setBody","form","submitFormAjax","show","formdata","jsonformdata","JSON","stringify","loadFragment","console","log","$footer","$style","handleFormSubmissionResponse","use","M","core_formchangechecker","reset_form_dirty_state","modalPromise","Templates","render","when","fail","Notification","exception","handleFormSubmissionFailure","e","preventDefault","formData","serialize","params","promise","call","methodname","done","window","location","href","submit","load"],"mappings":"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","sourcesContent":["/**\n * Add a create new group modal to the page.\n *\n * @module     local_notification/newnotification\n * @class      NewNotification\n * @package    local_notification\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/str', 'core/modal_factory', 'core/modal_events', 'core/fragment', 'core/ajax', 'core/yui'],\n        function($, Str, ModalFactory, ModalEvents, Fragment, Ajax, Y) {\n \n    /**\n     * Constructor\n     *\n     * @param {String} selector used to find triggers for the new group modal.\n     * @param {int} contextid\n     *\n     * Each call to init gets it's own instance of this class.\n     */\n    var NewNotification = function(args, notificationid, instance, plugin) {\n\n        this.contextid = args.context;\n        this.id = args.id;\n        this.notificationid = notificationid;\n        this.instance = instance;\n        this.plugin = plugin;\n        var self = this;\n        this.args = args;\n        self.init(args);\n    };\n \n    /**\n     * @var {Modal} modal\n     * @private\n     */\n    NewNotification.prototype.modal = null;\n \n    /**\n     * @var {int} contextid\n     * @private\n     */\n    NewNotification.prototype.contextid = -1;\n \n    /**\n     * Initialise the class.\n     *\n     * @param {String} selector used to find triggers for the new group modal.\n     * @private\n     * @return {Promise}\n     */\n    NewNotification.prototype.init = function(args) {\n        //var triggers = $(selector);\n        var self = this;\n        // Fetch the title string.\n            // $(\"#id_reminderdays\").css(\"display\",\"none\");\n            // $(\"input[name='reminderdays']\").hide();\n            // var editid = $(this).data(\"value\");\n            // var existclass = $(this).attr(\"class\");\n            // if (existclass) {\n            //     self.notificationid = '';\n            // } else if(editid){\n            //     self.notificationid = editid;\n            // }\n            if(args.id){\n                self.notificationid = args.id;\n            }else{\n                self.notificationid = 0;\n            }\n            if (self.notificationid) {\n                // self.userid = editid;\n                // console.log(self.userid);\n                var head =  Str.get_string('update_notification', 'local_notifications');\n                // alert(self.userid);\n            }else{\n               var head =  Str.get_string('create_notification', 'local_notifications');\n            }\n            return head.then(function(title) {\n                // Create the modal.\n                return ModalFactory.create({\n                type: ModalFactory.types.DEFAULT,\n                title: title,\n                body: this.getBody(),\n                footer: this.getFooter(),\n                });\n            }.bind(this)).then(function(modal) {\n                // Keep a reference to the modal.\n                this.modal = modal;\n                // self.modal.show();\n                // Forms are big, we want a big modal.\n                this.modal.setLarge(); \n                \n                this.modal.getRoot().addClass('openLMStransition local_notifications');\n\n                // this.modal.getRoot().on(ModalEvents.hidden, function() {\n                //     this.modal.setBody('');\n                this.modal.getRoot().on(ModalEvents.hidden, function() {\n                    this.modal.getRoot().animate({\"right\":\"-85%\"}, 500);\n                    //setTimeout(function(){\n                        modal.destroy();\n                    //}, 5000);\n                }.bind(this));\n\n                this.modal.getFooter().find('[data-action=\"save\"]').on('click', this.submitForm.bind(this));\n                // We also catch the form submit event and use it to submit the form with ajax.\n\n                // this.modal.getFooter().find('[data-action=\"cancel\"]').on('click', function() {\n                //     modal.setBody('');\n                //     modal.hide();\n                this.modal.getFooter().find('[data-action=\"cancel\"]').on('click', function() {\n                    modal.hide();\n                    setTimeout(function(){\n                        modal.destroy();\n                    }, 5000);\n                    // modal.destroy();\n                });\n\n                this.modal.getFooter().find('[data-action=\"skip\"]').on('click', function() {\n                    self.args.form_status = self.args.form_status + 1;\n                    var data = self.getBody();\n                    /*data.then(function(html, js) {\n                        if(html === false) {\n                            window.location.reload();\n                        }\n                    });*///Commented by Harish ODL-222\n                    modal.setBody(data);\n                });\n\n                this.modal.getRoot().on('submit', 'form', function(form) {\n                    self.submitFormAjax(form, self.args);\n                });\n                this.modal.show();\n                this.modal.getRoot().animate({\"right\":\"0%\"}, 500);\n\n                return this.modal;\n            }.bind(this));       \n        \n        \n        // });\n        \n    };\n \n    /**\n     * @method getBody\n     * @private\n     * @return {Promise}\n     */\n    NewNotification.prototype.getBody = function(formdata) {\n        if (typeof formdata === \"undefined\") {\n            formdata = {};\n        }\n        // console.log(this);\n        // alert(formdata);\n        // Get the content of the modal.\n        // this.args.userid = this.userid\n        this.args.jsonformdata = JSON.stringify(formdata);\n        return Fragment.loadFragment('local_notifications', 'new_notification_form', this.contextid, this.args);\n    };\n    /**\n     * @method getFooter\n     * @private\n     * @return {Promise}\n     */\n    NewNotification.prototype.getFooter = function() {\n        console.log(this.args);\n        if(this.args.id){\n             $footer = '<button type=\"button\" class=\"btn btn-primary\" data-action=\"save\">Update</button>&nbsp;';\n        }\n        else{\n        $footer = '<button type=\"button\" class=\"btn btn-primary\" data-action=\"save\">Create</button>&nbsp;';\n        }\n        if (this.form_status == 0) {\n            $style = 'style=\"display:none;\"';\n            $footer += '<button type=\"button\" class=\"btn btn-secondary\" data-action=\"skip\" ' + $style + '>Skip</button>&nbsp;';\n        }\n        $footer += '<button type=\"button\" class=\"btn btn-secondary\" data-action=\"cancel\">Cancel</button>';\n        return $footer;\n    };\n \n    /**\n     * @method handleFormSubmissionResponse\n     * @private\n     * @return {Promise}\n     */\n    NewNotification.prototype.handleFormSubmissionResponse = function() {\n        this.modal.hide();\n        // We could trigger an event instead.\n        // Yuk.\n        Y.use('moodle-core-formchangechecker', function() {\n            M.core_formchangechecker.reset_form_dirty_state();\n        });\n        // document.location.reload();\n        // This will be the context for our template. So {{name}} in the template will resolve to \"Tweety bird\".\n        var context = { id: args.id};\n        // // This will call the function to load and render our template.\n        // templates.render('local_classroom/classroomview', context);\n\n        // // It returns a promise that needs to be resoved.\n        //     .then(function(html, js) {\n                var modalPromise = ModalFactory.create({\n                    type: ModalFactory.types.DEFAULT,\n                    body: Templates.render('local_classroom/classroomview', context),\n                });\n                $.when(modalPromise).then(function(modal) {\n                    // modal.setTitle('Hi');\n                    // // modal.setBody('Hi');\n                    // modal.show();\n                    // return modal;\n                }).fail(Notification.exception);\n\n\n            //     // Here eventually I have my compiled template, and any javascript that it generated.\n            //     // The templates object has append, prepend and replace functions.\n            //     templates.appendNodeContents('.block_looneytunes .content', source, javascript);\n            // }).fail(function(ex) {\n            //     // Deal with this exception (I recommend core/notify exception function for this).\n            // });\n    };\n \n    /**\n     * @method handleFormSubmissionFailure\n     * @private\n     * @return {Promise}\n     */\n    NewNotification.prototype.handleFormSubmissionFailure = function(data) {\n        // Oh noes! Epic fail :(\n        // Ah wait - this is normal. We need to re-display the form with errors!\n        this.modal.setBody(this.getBody(data));\n    };\n \n    /**\n     * Private method\n     *\n     * @method submitFormAjax\n     * @private\n     * @param {Event} e Form submission event.\n     */\n    NewNotification.prototype.submitFormAjax = function(e ,args) {\n        // We don't want to do a real form submission.\n        e.preventDefault();\n        var self = this;\n        // Convert all the form elements values to a serialised string.\n        var formData = this.modal.getRoot().find('form').serialize();\n        // var methodname = args.plugintype + '_' + args.pluginname + '_submit_create_user_form';\n        var methodname = 'local_notifications_submit_create_notification_form';\n        var params = {};\n        params.contextid = this.contextid;\n        params.jsonformdata = JSON.stringify(formData);\n        params.form_status = args.form_status;\n\n        var promise = Ajax.call([{\n            methodname: methodname,\n            args: params\n        }]);\n\n         promise[0].done(function(resp){\n            //for ODL-222 issue fixing starts here\n            /*if(resp.form_status !== -1 && resp.form_status !== false) {\n                self.args.form_status = resp.form_status;\n                self.args.id = resp.id;\n                self.handleFormSubmissionFailure();\n            } else {\n                // self.handleFormSubmissionResponse(self.args);\n                // alert('here');\n                self.modal.hide();\n                window.location.reload();\n            }\n            if(args.form_status > 0) {\n                $('[data-action=\"skip\"]').css('display', 'inline-block');\n            }*/\n            //for ODL-222 issue fixing starts here\n            window.location.href = window.location.href;\n        }).fail(function(ex){\n            self.handleFormSubmissionFailure(formData);\n        })\n        // alert(this.contextid);\n        // Now we can continue...\n        // Ajax.call([{\n        //     methodname: 'local_users_submit_create_user_form',\n        //     args: {contextid: this.contextid, jsonformdata: JSON.stringify(formData)},\n        //     done: this.handleFormSubmissionResponse.bind(this, formData),\n        //     fail: this.handleFormSubmissionFailure.bind(this, formData)\n        // }]);\n    };\n \n    /**\n     * This triggers a form submission, so that any mform elements can do final tricks before the form submission is processed.\n     *\n     * @method submitForm\n     * @param {Event} e Form submission event.\n     * @private\n     */\n    NewNotification.prototype.submitForm = function(e) {\n        e.preventDefault();\n        var self = this;\n        self.modal.getRoot().find('form').submit();\n    };\n \n    return /** @alias module:local_users/newuser */ {\n        // Public variables and functions.\n        /**\n         * Attach event listeners to initialise this module.\n         *\n         * @method init\n         * @param {string} selector The CSS selector used to find nodes that will trigger this module.\n         * @param {int} contextid The contextid for the course.\n         * @return {Promise}\n         */\n        init: function(args) {\n            return new NewNotification(args);\n        },\n        load: function(){\n\n        }\n    };\n});\n"],"file":"notifications.min.js"}