{"version":3,"sources":["../src/paged_content_paging_bar.js"],"names":["define","$","CustomEvents","PagedContentEvents","Str","PubSub","SELECTORS","ROOT","PAGE","PAGE_ITEM","PAGE_LINK","FIRST_BUTTON","LAST_BUTTON","NEXT_BUTTON","PREVIOUS_BUTTON","getPageByNumber","root","pageNumber","find","getNextButton","setLastPageNumber","number","attr","getLastPageNumber","parseInt","getActivePageNumber","setActivePageNumber","hasActivePageNumber","isNaN","getPageNumber","page","activePageNumber","lastPage","getLimit","setLimit","limit","show","removeClass","hide","addClass","disableNextControlButtons","nextButton","lastButton","enableNextControlButtons","removeAttr","disablePreviousControlButtons","previousButton","firstButton","enablePreviousControlButtons","getPageAriaLabelComponents","componentString","components","split","map","component","trim","getActivePageAriaLabelComponents","generatePageNumbers","items","lastPageNumber","each","index","item","hasClass","generateAriaLabels","pageAriaLabelComponents","activePageAriaLabelComponents","pageItems","stringRequests","key","param","get_strings","then","strings","string","catch","showPage","id","isSamePage","i","minvalues","lastPageNumberbutone","diff","maxvalues","secondpage","html","prevpagenumber","lastbutonepage","publish","SHOW_PAGES","offset","registerEventListeners","ignoreControlWhileLoading","loading","events","activate","on","e","data","originalEvent","preventDefault","stopPropagation","target","closest","subscribe","ALL_ITEMS_LOADED","currentLastPage","PAGES_SHOWN","SET_ITEMS_PER_PAGE_LIMIT","init","pages","click","rootSelector"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Javascript to enhance the paged content paging bar.\r\n *\r\n * @module     core/paging_bar\r\n * @copyright  2018 Ryan Wyllie <ryan@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\ndefine(\r\n    [\r\n        'jquery',\r\n        'core/custom_interaction_events',\r\n        'core/paged_content_events',\r\n        'core/str',\r\n        'core/pubsub'\r\n    ],\r\n    function(\r\n        $,\r\n        CustomEvents,\r\n        PagedContentEvents,\r\n        Str,\r\n        PubSub\r\n    ) {\r\n\r\n    var SELECTORS = {\r\n        ROOT: '[data-region=\"paging-bar\"]',\r\n        PAGE: '[data-page]',\r\n        PAGE_ITEM: '[data-region=\"page-item\"]',\r\n        PAGE_LINK: '[data-region=\"page-link\"]',\r\n        FIRST_BUTTON: '[data-control=\"first\"]',\r\n        LAST_BUTTON: '[data-control=\"last\"]',\r\n        NEXT_BUTTON: '[data-control=\"next\"]',\r\n        PREVIOUS_BUTTON: '[data-control=\"previous\"]'\r\n    };\r\n\r\n    /**\r\n     * Get the page element by number.\r\n     *\r\n     * @param {object} root The root element.\r\n     * @param {Number} pageNumber The page number.\r\n     * @return {jQuery}\r\n     */\r\n    var getPageByNumber = function(root, pageNumber) {\r\n        return root.find(SELECTORS.PAGE_ITEM + '[data-page-number=\"' + pageNumber + '\"]');\r\n    };\r\n\r\n    /**\r\n     * Get the next button element.\r\n     *\r\n     * @param {object} root The root element.\r\n     * @return {jQuery}\r\n     */\r\n    var getNextButton = function(root) {\r\n        return root.find(SELECTORS.NEXT_BUTTON);\r\n    };\r\n\r\n    /**\r\n     * Set the last page number after which no more pages\r\n     * should be loaded.\r\n     *\r\n     * @param {object} root The root element.\r\n     * @param {Number} number Page number.\r\n     */\r\n    var setLastPageNumber = function(root, number) {\r\n        root.attr('data-last-page-number', number);\r\n    };\r\n\r\n    /**\r\n     * Get the last page number.\r\n     *\r\n     * @param {object} root The root element.\r\n     * @return {Number}\r\n     */\r\n    var getLastPageNumber = function(root) {\r\n        return parseInt(root.attr('data-last-page-number'), 10);\r\n    };\r\n\r\n    /**\r\n     * Get the active page number.\r\n     *\r\n     * @param {object} root The root element.\r\n     * @returns {Number} The page number\r\n     */\r\n    var getActivePageNumber = function(root) {\r\n        return parseInt(root.attr('data-active-page-number'), 10);\r\n    };\r\n\r\n    /**\r\n     * Set the active page number.\r\n     *\r\n     * @param {object} root The root element.\r\n     * @param {Number} number Page number.\r\n     */\r\n    var setActivePageNumber = function(root, number) {\r\n        root.attr('data-active-page-number', number);\r\n    };\r\n\r\n    /**\r\n     * Check if there is an active page number.\r\n     *\r\n     * @param {object} root The root element.\r\n     * @returns {bool}\r\n     */\r\n    var hasActivePageNumber = function(root) {\r\n        var number = getActivePageNumber(root);\r\n        return !isNaN(number) && number != 0;\r\n    };\r\n\r\n    /**\r\n     * Get the page number for a given page.\r\n     *\r\n     * @param {object} root The root element.\r\n     * @param {object} page The page element.\r\n     * @returns {Number} The page number\r\n     */\r\n    var getPageNumber = function(root, page) {\r\n        if (page.attr('data-page') != undefined) {\r\n            // If it's an actual page then we can just use the page number\r\n            // attribute.\r\n            return parseInt(page.attr('data-page-number'), 10);\r\n        }\r\n\r\n        var pageNumber = 1;\r\n        var activePageNumber = null;\r\n\r\n        switch (page.attr('data-control')) {\r\n            case 'first':\r\n                pageNumber = 1;\r\n                break;\r\n\r\n            case 'last':\r\n                pageNumber = getLastPageNumber(root);\r\n                break;\r\n\r\n            case 'next':\r\n                activePageNumber = getActivePageNumber(root);\r\n                var lastPage = getLastPageNumber(root);\r\n                if (!lastPage) {\r\n                    pageNumber = activePageNumber + 1;\r\n                } else if (activePageNumber && activePageNumber < lastPage) {\r\n                    pageNumber = activePageNumber + 1;\r\n                } else {\r\n                    pageNumber = lastPage;\r\n                }\r\n                break;\r\n\r\n            case 'previous':\r\n                activePageNumber = getActivePageNumber(root);\r\n                if (activePageNumber && activePageNumber > 1) {\r\n                    pageNumber = activePageNumber - 1;\r\n                } else {\r\n                    pageNumber = 1;\r\n                }\r\n                break;\r\n\r\n            default:\r\n                pageNumber = 1;\r\n                break;\r\n        }\r\n\r\n        // Make sure we return an int not a string.\r\n        return parseInt(pageNumber, 10);\r\n    };\r\n\r\n    /**\r\n     * Get the limit of items for each page.\r\n     *\r\n     * @param {object} root The root element.\r\n     * @returns {Number}\r\n     */\r\n    var getLimit = function(root) {\r\n        return parseInt(root.attr('data-items-per-page'), 10);\r\n    };\r\n\r\n    /**\r\n     * Set the limit of items for each page.\r\n     *\r\n     * @param {object} root The root element.\r\n     * @param {Number} limit Items per page limit.\r\n     */\r\n    var setLimit = function(root, limit) {\r\n        root.attr('data-items-per-page', limit);\r\n    };\r\n\r\n    /**\r\n     * Show the paging bar.\r\n     *\r\n     * @param {object} root The root element.\r\n     */\r\n    var show = function(root) {\r\n        root.removeClass('hidden');\r\n    };\r\n\r\n    /**\r\n     * Hide the paging bar.\r\n     *\r\n     * @param {object} root The root element.\r\n     */\r\n    var hide = function(root) {\r\n        root.addClass('hidden');\r\n    };\r\n\r\n    /**\r\n     * Disable the next and last buttons in the paging bar.\r\n     *\r\n     * @param {object} root The root element.\r\n     */\r\n    var disableNextControlButtons = function(root) {\r\n        var nextButton = root.find(SELECTORS.NEXT_BUTTON);\r\n        var lastButton = root.find(SELECTORS.LAST_BUTTON);\r\n\r\n        nextButton.addClass('disabled');\r\n        nextButton.attr('aria-disabled', true);\r\n        lastButton.addClass('disabled');\r\n        lastButton.attr('aria-disabled', true);\r\n    };\r\n\r\n    /**\r\n     * Enable the next and last buttons in the paging bar.\r\n     *\r\n     * @param {object} root The root element.\r\n     */\r\n    var enableNextControlButtons = function(root) {\r\n        var nextButton = root.find(SELECTORS.NEXT_BUTTON);\r\n        var lastButton = root.find(SELECTORS.LAST_BUTTON);\r\n\r\n        nextButton.removeClass('disabled');\r\n        nextButton.removeAttr('aria-disabled');\r\n        lastButton.removeClass('disabled');\r\n        lastButton.removeAttr('aria-disabled');\r\n    };\r\n\r\n    /**\r\n     * Disable the previous and first buttons in the paging bar.\r\n     *\r\n     * @param {object} root The root element.\r\n     */\r\n    var disablePreviousControlButtons = function(root) {\r\n        var previousButton = root.find(SELECTORS.PREVIOUS_BUTTON);\r\n        var firstButton = root.find(SELECTORS.FIRST_BUTTON);\r\n\r\n        previousButton.addClass('disabled');\r\n        previousButton.attr('aria-disabled', true);\r\n        firstButton.addClass('disabled');\r\n        firstButton.attr('aria-disabled', true);\r\n    };\r\n\r\n    /**\r\n     * Enable the previous and first buttons in the paging bar.\r\n     *\r\n     * @param {object} root The root element.\r\n     */\r\n    var enablePreviousControlButtons = function(root) {\r\n        var previousButton = root.find(SELECTORS.PREVIOUS_BUTTON);\r\n        var firstButton = root.find(SELECTORS.FIRST_BUTTON);\r\n\r\n        previousButton.removeClass('disabled');\r\n        previousButton.removeAttr('aria-disabled');\r\n        firstButton.removeClass('disabled');\r\n        firstButton.removeAttr('aria-disabled');\r\n    };\r\n\r\n    /**\r\n     * Get the components for a get_string request for the aria-label\r\n     * on a page. The value is a comma separated string of key and\r\n     * component.\r\n     *\r\n     * @param {object} root The root element.\r\n     * @return {array} First element is the key, second is the component.\r\n     */\r\n    var getPageAriaLabelComponents = function(root) {\r\n        var componentString = root.attr('data-aria-label-components-pagination-item');\r\n        var components = componentString.split(',').map(function(component) {\r\n            return component.trim();\r\n        });\r\n        return components;\r\n    };\r\n\r\n    /**\r\n     * Get the components for a get_string request for the aria-label\r\n     * on an active page. The value is a comma separated string of key and\r\n     * component.\r\n     *\r\n     * @param {object} root The root element.\r\n     * @return {array} First element is the key, second is the component.\r\n     */\r\n    var getActivePageAriaLabelComponents = function(root) {\r\n        var componentString = root.attr('data-aria-label-components-pagination-active-item');\r\n        var components = componentString.split(',').map(function(component) {\r\n            return component.trim();\r\n        });\r\n        return components;\r\n    };\r\n\r\n    /**\r\n     * Set page numbers on each of the given items. Page numbers are set\r\n     * from 1..n (where n is the number of items).\r\n     *\r\n     * Sets the active page number to be the last page found with\r\n     * an \"active\" class (if any).\r\n     *\r\n     * Sets the last page number.\r\n     *\r\n     * @param {object} root The root element.\r\n     * @param {jQuery} items A jQuery list of items.\r\n     */\r\n    var generatePageNumbers = function(root, items) {\r\n        var lastPageNumber = 0;\r\n        setActivePageNumber(root, 0);\r\n\r\n        items.each(function(index, item) {\r\n            var pageNumber = index + 1;\r\n            item = $(item);\r\n            item.attr('data-page-number', pageNumber);\r\n            lastPageNumber++;\r\n\r\n            if (item.hasClass('active')) {\r\n                setActivePageNumber(root, pageNumber);\r\n            }\r\n        });\r\n\r\n        setLastPageNumber(root, lastPageNumber);\r\n    };\r\n\r\n    /**\r\n     * Set the aria-labels on each of the page items in the paging bar.\r\n     * This includes the next, previous, first, and last items.\r\n     *\r\n     * @param {object} root The root element.\r\n     */\r\n    var generateAriaLabels = function(root) {\r\n        var pageAriaLabelComponents = getPageAriaLabelComponents(root);\r\n        var activePageAriaLabelComponents = getActivePageAriaLabelComponents(root);\r\n        var activePageNumber = getActivePageNumber(root);\r\n        var pageItems = root.find(SELECTORS.PAGE_ITEM);\r\n        // We want to request all of the strings at once rather than\r\n        // one at a time.\r\n        var stringRequests = pageItems.map(function(index, page) {\r\n            page = $(page);\r\n            var pageNumber = getPageNumber(root, page);\r\n\r\n            if (pageNumber === activePageNumber) {\r\n                return {\r\n                    key: activePageAriaLabelComponents[0],\r\n                    component: activePageAriaLabelComponents[1],\r\n                    param: pageNumber\r\n                };\r\n            } else {\r\n                return {\r\n                    key: pageAriaLabelComponents[0],\r\n                    component: pageAriaLabelComponents[1],\r\n                    param: pageNumber\r\n                };\r\n            }\r\n        });\r\n\r\n        Str.get_strings(stringRequests).then(function(strings) {\r\n            pageItems.each(function(index, page) {\r\n                page = $(page);\r\n                var string = strings[index];\r\n                page.attr('aria-label', string);\r\n                page.find(SELECTORS.PAGE_LINK).attr('aria-label', string);\r\n            });\r\n\r\n            return strings;\r\n        })\r\n        .catch(function() {\r\n            // No need to interrupt the page if we can't load the aria lang strings.\r\n            return;\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Make the paging bar item for the given page number visible and fire\r\n     * the SHOW_PAGES paged content event to tell any listening content to\r\n     * update.\r\n     *\r\n     * @param {object} root The root element.\r\n     * @param {Number} pageNumber The number for the page to show.\r\n     * @param {string} id A uniqie id for this instance.\r\n     */\r\n    var showPage = function(root, pageNumber, id) {\r\n        var lastPageNumber = getLastPageNumber(root);\r\n        var isSamePage = pageNumber == getActivePageNumber(root);\r\n        var limit = getLimit(root);\r\n        var offset = (pageNumber - 1) * limit;\r\n\r\n        if (!isSamePage) {\r\n\r\n            // We only need to toggle the active class if the user didn't click\r\n            // on the already active page.\r\n            root.find(SELECTORS.PAGE_ITEM).removeClass('active').removeAttr('aria-current');\r\n           \r\n            for (var i = 1; i <= lastPageNumber; i++) {\r\n                if(i == lastPageNumber-1 && lastPageNumber > 8){\r\n                    var page = getPageByNumber(root, '...');\r\n                }else{\r\n                    var page = getPageByNumber(root, i);\r\n                }\r\n\r\n                if(pageNumber == i){\r\n                    page.addClass('active');\r\n                    page.attr('aria-current', true);\r\n                }\r\n                                    \r\n                if(pageNumber > 0 && lastPageNumber > 8){\r\n                    var minvalues = pageNumber-2;\r\n                    var lastPageNumberbutone = lastPageNumber-1;\r\n                    var diff = lastPageNumberbutone - pageNumber;\r\n                    if(diff < 4 ){\r\n                        if(diff == 1){\r\n                            minvalues = minvalues - 3;\r\n                        }else if(diff == 2){\r\n                            minvalues = minvalues - 2;\r\n                        }else if(diff == 3){\r\n                            minvalues = minvalues - 1;\r\n                        }else if(lastPageNumber == pageNumber){\r\n                            minvalues = minvalues - 5;\r\n                        }else{\r\n                            minvalues = minvalues - 4;\r\n                        }\r\n                    }\r\n\r\n                    var maxvalues = pageNumber+3;\r\n\r\n                    if(pageNumber < 5){\r\n                        if(pageNumber == 4){\r\n                            maxvalues = maxvalues + 1;\r\n                        }else if(pageNumber == 3){\r\n                            maxvalues = maxvalues + 2;\r\n                        }else if(pageNumber == 2){\r\n                            maxvalues = maxvalues + 3;\r\n                        }else if(pageNumber == 1){\r\n                            maxvalues = maxvalues + 4;\r\n                        }\r\n                        var secondpage = $('[data-page-number=\"' + 2 + '\"]').find('[data-region=\"page-link\"]');\r\n                        secondpage.html(2);\r\n\r\n                        var prevpagenumber = lastPageNumber-1;\r\n                        var lastbutonepage = $('[data-page-number=\"' + prevpagenumber + '\"]').find('[data-region=\"page-link\"]');\r\n                        lastbutonepage.html('...');\r\n                    }\r\n\r\n                    if(maxvalues > lastPageNumber){\r\n                        maxvalues = lastPageNumber;\r\n                    }\r\n                    if(i >= minvalues && pageNumber >= i || maxvalues >= i  && i >= pageNumber){\r\n                        page.removeClass('hidden');\r\n                    }else{\r\n                        if(i != lastPageNumber && i > 2){\r\n                            page.addClass('hidden');\r\n                        }\r\n                    }\r\n                }\r\n\r\n                //adding dots\r\n                if(pageNumber > 5 && lastPageNumber > 8){\r\n                    var prevpagenumber = lastPageNumber-1;\r\n                    var lastbutonepage = $('[data-page-number=\"' + prevpagenumber + '\"]').find('[data-region=\"page-link\"]');\r\n                    var lastPageNumberbutone = lastPageNumber-1;\r\n                    var diff = lastPageNumberbutone - pageNumber;\r\n\r\n                    if(pageNumber == prevpagenumber){\r\n                        lastbutonepage.html(prevpagenumber);\r\n                        $('[data-page-number=\"' + prevpagenumber + '\"]').addClass('active');\r\n                    }else{\r\n                        if(diff < 4){\r\n                            lastbutonepage.html(prevpagenumber);\r\n                        }else{\r\n                            lastbutonepage.html('...');\r\n                        }\r\n                    }\r\n                    \r\n\r\n                    var secondpagenumber = 2;\r\n                    var secondpage = $('[data-page-number=\"' + 2 + '\"]').find('[data-region=\"page-link\"]');\r\n                    if(pageNumber == secondpagenumber){\r\n                        secondpage.html(pageNumber);\r\n                    }else{\r\n                        secondpage.html('...');\r\n                    }\r\n                }\r\n\r\n                \r\n            }\r\n            setActivePageNumber(root, pageNumber);\r\n        }\r\n\r\n        // Make sure the control buttons are disabled as the user navigates\r\n        // to either end of the limits.\r\n        if (lastPageNumber && pageNumber >= lastPageNumber) {\r\n            disableNextControlButtons(root);\r\n        } else {\r\n            enableNextControlButtons(root);\r\n        }\r\n\r\n        if (pageNumber > 1) {\r\n            enablePreviousControlButtons(root);\r\n        } else {\r\n            disablePreviousControlButtons(root);\r\n        }\r\n\r\n        generateAriaLabels(root);\r\n\r\n        // This event requires a payload that contains a list of all pages that\r\n        // were activated. In the case of the paging bar we only show one page at\r\n        // a time.\r\n        PubSub.publish(id + PagedContentEvents.SHOW_PAGES, [{\r\n            pageNumber: pageNumber,\r\n            limit: limit,\r\n            offset: offset\r\n        }]);\r\n    };\r\n\r\n    /**\r\n     * Add event listeners for interactions with the paging bar as well as listening\r\n     * for custom paged content events.\r\n     *\r\n     * Each event will trigger different logic to update parts of the paging bar's\r\n     * display.\r\n     *\r\n     * @param {object} root The root element.\r\n     * @param {string} id A uniqie id for this instance.\r\n     */\r\n    var registerEventListeners = function(root, id) {\r\n        var ignoreControlWhileLoading = root.attr('data-ignore-control-while-loading');\r\n        var loading = false;\r\n\r\n        if (ignoreControlWhileLoading == \"\") {\r\n            // Default to ignoring control while loading if not specified.\r\n            ignoreControlWhileLoading = true;\r\n        }\r\n\r\n        CustomEvents.define(root, [\r\n            CustomEvents.events.activate\r\n        ]);\r\n\r\n        root.on(CustomEvents.events.activate, SELECTORS.PAGE_ITEM, function(e, data) {\r\n            data.originalEvent.preventDefault();\r\n            data.originalEvent.stopPropagation();\r\n\r\n            if (ignoreControlWhileLoading && loading) {\r\n                // Do nothing if configured to ignore control while loading.\r\n                return;\r\n            }\r\n\r\n            var page = $(e.target).closest(SELECTORS.PAGE_ITEM);\r\n\r\n            if (!page.hasClass('disabled')) {\r\n                var pageNumber = getPageNumber(root, page);\r\n                showPage(root, pageNumber, id);\r\n                loading = true;\r\n            }\r\n        });\r\n\r\n        // This event is fired when all of the items have been loaded. Typically used\r\n        // in an \"infinite\" pages context when we don't know the exact number of pages\r\n        // ahead of time.\r\n        PubSub.subscribe(id + PagedContentEvents.ALL_ITEMS_LOADED, function(pageNumber) {\r\n            loading = false;\r\n            var currentLastPage = getLastPageNumber(root);\r\n\r\n            if (!currentLastPage || pageNumber < currentLastPage) {\r\n                // Somehow the value we've got saved is higher than the new\r\n                // value we just received. Perhaps events came out of order.\r\n                // In any case, save the lowest value.\r\n                setLastPageNumber(root, pageNumber);\r\n            }\r\n\r\n            if (pageNumber === 1 && root.attr('data-hide-control-on-single-page')) {\r\n                // If all items were loaded on the first page then we can hide\r\n                // the paging bar because there are no other pages to load.\r\n                hide(root);\r\n                disableNextControlButtons(root);\r\n                disablePreviousControlButtons(root);\r\n            } else {\r\n                show(root);\r\n                disableNextControlButtons(root);\r\n            }\r\n        });\r\n\r\n        // This event is fired after all of the requested pages have been rendered.\r\n        PubSub.subscribe(id + PagedContentEvents.PAGES_SHOWN, function() {\r\n            // All pages have been shown so turn off the loading flag.\r\n            loading = false;\r\n        });\r\n\r\n        // This is triggered when the paging limit is modified.\r\n        PubSub.subscribe(id + PagedContentEvents.SET_ITEMS_PER_PAGE_LIMIT, function(limit) {\r\n            // Update the limit.\r\n            setLimit(root, limit);\r\n            setLastPageNumber(root, 0);\r\n            setActivePageNumber(root, 0);\r\n            show(root);\r\n            // Reload the data from page 1 again.\r\n            showPage(root, 1, id);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Initialise the paging bar.\r\n     * @param {object} root The root element.\r\n     * @param {string} id A uniqie id for this instance.\r\n     */\r\n    var init = function(root, id) {\r\n        root = $(root);\r\n        var pages = root.find(SELECTORS.PAGE);\r\n        generatePageNumbers(root, pages);\r\n        registerEventListeners(root, id);\r\n\r\n        if (hasActivePageNumber(root)) {\r\n            var activePageNumber = getActivePageNumber(root);\r\n            // If the the paging bar was rendered with an active page selected\r\n            // then make sure we fired off the event to tell the content page to\r\n            // show.\r\n            getPageByNumber(root, activePageNumber).click();\r\n            if (activePageNumber == 1) {\r\n                // If the first page is active then disable the previous buttons.\r\n                disablePreviousControlButtons(root);\r\n            }\r\n        } else {\r\n            // There was no active page number so load the first page using\r\n            // the next button. This allows the infinite pagination to work.\r\n            getNextButton(root).click();\r\n        }\r\n    };\r\n\r\n    return {\r\n        init: init,\r\n        showPage: showPage,\r\n        rootSelector: SELECTORS.ROOT,\r\n    };\r\n});\r\n"],"file":"paged_content_paging_bar.min.js"}