{"version":3,"sources":["../src/dataTables.checkboxes.js"],"names":["factory","define","amd","$","window","document","exports","module","root","fn","dataTable","require","jQuery","DataTable","Checkboxes","settings","versionCheck","s","dt","Api","columns","data","dataDisabled","ignoreSelect","ctx","checkboxes","_constructor","prototype","self","hasCheckboxes","hasCheckboxesSelectRow","state","loaded","i","aoColumns","length","$colHeader","column","header","isPlainObject","extend","defaults","colOptions","sClass","sWidthOrig","mRender","ext","internal","_fnColumnOptions","removeClass","off","sAjaxSource","cells","invalidate","nodes","addClass","hasOwnProperty","push","selectRow","_select","selectAll","html","selectAllRender","selectAllHtml","isFunction","attr","$table","table","node","$tableBody","body","$tableContainer","container","on","e","type","cell","cellIdx","index","rowIdx","row","colIdx","getSelectRowColIndex","cellData","isCellSelectable","preventDefault","api","indexes","onSelect","select","info","showInfoSelected","onDraw","onClick","onClickSelectAll","not","trigger","_fixedHeader","dom","floating","oFeatures","bServerSide","bStateSave","updateState","each","one","el","updateData","isSelected","cellsData","save","updateSelect","selector","rows","deselect","updateCheckbox","cellNodes","prop","selectCallback","updateStateCheckboxes","page","search","updateSelectAll","opts","every","ctrl","cellSelector","$cell","closest","parents","fixedColumns","cellIndex","checked","stopPropagation","setTimeout","hasData","$th","selectAllPages","bDeferRender","$checkboxesSelectAll","countChecked","isIndeterminate","selectAllCallback","get","aanFeatures","$output","add","name","num","append","i18n","_","countRows","$el","$existing","children","remove","text","getCellIndex","_oFixedColumns","updateFixedColumn","leftCols","iLeftColumns","rightCols","iRightColumns","update","register","registerPlural","iterator","j","rowsIdx","rowsSelectableIdx","cellNode","enable","version","namespace"],"mappings":"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","sourcesContent":["/*! Checkboxes 1.2.9\r\n *  Copyright (c) Gyrocode (www.gyrocode.com)\r\n *  License: MIT License\r\n */\r\n\r\n/**\r\n * @summary     Checkboxes\r\n * @description Checkboxes extension for jQuery DataTables\r\n * @version     1.2.9\r\n * @file        dataTables.checkboxes.js\r\n * @author      Gyrocode (http://www.gyrocode.com/projects/jquery-datatables-checkboxes/)\r\n * @contact     http://www.gyrocode.com/contacts\r\n * @copyright   Copyright (c) Gyrocode\r\n * @license     MIT License\r\n */\r\n\r\n(function( factory ){\r\n   if ( typeof define === 'function' && define.amd ) {\r\n      // AMD\r\n      define( ['jquery', 'local_program/jquery.dataTables'], function ( $ ) {\r\n         return factory( $, window, document );\r\n      } );\r\n   }\r\n   else if ( typeof exports === 'object' ) {\r\n      // CommonJS\r\n      module.exports = function (root, $) {\r\n         if ( ! root ) {\r\n            root = window;\r\n         }\r\n\r\n         if ( ! $ || ! $.fn.dataTable ) {\r\n            $ = require('datatables.net')(root, $).$;\r\n         }\r\n\r\n         return factory( $, root, root.document );\r\n      };\r\n   }\r\n   else {\r\n      // Browser\r\n      factory( jQuery, window, document );\r\n   }\r\n}(function( $, window, document, undefined ) {\r\n'use strict';\r\nvar DataTable = $.fn.dataTable;\r\n\r\n\r\n/**\r\n * Checkboxes is an extension for the jQuery DataTables library that provides\r\n * universal solution for working with checkboxes in a table.\r\n *\r\n *  @class\r\n *  @param {object} settings DataTables settings object for the host table\r\n *  @requires jQuery 1.7+\r\n *  @requires DataTables 1.10.8+\r\n *\r\n *  @example\r\n *     $('#example').DataTable({\r\n *        'columnDefs': [\r\n *           {\r\n *              'targets': 0,\r\n *              'checkboxes': true\r\n *           }\r\n *        ]\r\n *     });\r\n */\r\nvar Checkboxes = function ( settings ) {\r\n   // Sanity check that we are using DataTables 1.10.8 or newer\r\n   if ( ! DataTable.versionCheck || ! DataTable.versionCheck( '1.10.8' ) ) {\r\n      throw 'DataTables Checkboxes requires DataTables 1.10.8 or newer';\r\n   }\r\n\r\n   this.s = {\r\n      dt: new DataTable.Api( settings ),\r\n      columns: [],\r\n      data: {},\r\n      dataDisabled: {},\r\n      ignoreSelect: false\r\n   };\r\n\r\n   // Get settings object\r\n   this.s.ctx = this.s.dt.settings()[0];\r\n\r\n   // Check if checkboxes have already been initialised on this table\r\n   if ( this.s.ctx.checkboxes ) {\r\n      return;\r\n   }\r\n\r\n   settings.checkboxes = this;\r\n\r\n   this._constructor();\r\n};\r\n\r\n\r\nCheckboxes.prototype = {\r\n   /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\r\n    * Constructor\r\n    */\r\n\r\n   /**\r\n    * Initialise the Checkboxes instance\r\n    *\r\n    * @private\r\n    */\r\n   _constructor: function ()\r\n   {\r\n      var self = this;\r\n      var dt = self.s.dt;\r\n      var ctx = self.s.ctx;\r\n      var hasCheckboxes = false;\r\n      var hasCheckboxesSelectRow = false;\r\n\r\n      // Retrieve stored state\r\n      var state = dt.state.loaded();\r\n\r\n      for(var i = 0; i < ctx.aoColumns.length; i++){\r\n         if (ctx.aoColumns[i].checkboxes){\r\n            var $colHeader = $(dt.column(i).header());\r\n\r\n            //\r\n            // INITIALIZATION\r\n            //\r\n\r\n            hasCheckboxes = true;\r\n\r\n            if(!$.isPlainObject(ctx.aoColumns[i].checkboxes)){\r\n               ctx.aoColumns[i].checkboxes = {};\r\n            }\r\n\r\n            ctx.aoColumns[i].checkboxes = $.extend(\r\n               {}, Checkboxes.defaults, ctx.aoColumns[i].checkboxes\r\n            );\r\n\r\n\r\n            //\r\n            // OPTIONS\r\n            //\r\n\r\n            var colOptions = {\r\n               'searchable': false,\r\n               'orderable': false\r\n            };\r\n\r\n            if(ctx.aoColumns[i].sClass === ''){\r\n               colOptions['className'] = 'dt-checkboxes-cell';\r\n            } else {\r\n               colOptions['className'] = ctx.aoColumns[i].sClass + ' dt-checkboxes-cell';\r\n            }\r\n\r\n            if(ctx.aoColumns[i].sWidthOrig === null){\r\n               colOptions['width'] = '1%';\r\n            }\r\n\r\n            if(ctx.aoColumns[i].mRender === null){\r\n               colOptions['render'] = function(){\r\n                  return '<input type=\"checkbox\" class=\"dt-checkboxes\">';\r\n               };\r\n            }\r\n\r\n            DataTable.ext.internal._fnColumnOptions(ctx, i, colOptions);\r\n\r\n\r\n            // WORKAROUND: Remove \"sorting\" class\r\n            $colHeader.removeClass('sorting');\r\n\r\n            // WORKAROUND: Detach all event handlers for this column\r\n            $colHeader.off('.dt');\r\n\r\n            // If table has data source other than Ajax\r\n            if(ctx.sAjaxSource === null){\r\n               // WORKAROUND: Invalidate column data\r\n               var cells = dt.cells('tr', i);\r\n               cells.invalidate('data');\r\n\r\n               // WORKAROUND: Add required class to existing cells\r\n               $(cells.nodes()).addClass(colOptions['className']);\r\n            }\r\n\r\n\r\n            //\r\n            // DATA\r\n            //\r\n\r\n            // Initialize object holding data for selected checkboxes\r\n            self.s.data[i] = {};\r\n            self.s.dataDisabled[i] = {};\r\n\r\n            // If state is loaded and contains data for this column\r\n            if(state && state.checkboxes && state.checkboxes.hasOwnProperty(i)){\r\n               // Load previous state\r\n               self.s.data[i] = state.checkboxes[i];\r\n            }\r\n\r\n            // Store column index for easy column selection later\r\n            self.s.columns.push(i);\r\n\r\n\r\n            //\r\n            // CLASSES\r\n            //\r\n\r\n            // If row selection is enabled for this column\r\n            if(ctx.aoColumns[i].checkboxes.selectRow){\r\n\r\n               // If Select extension is enabled\r\n               if(ctx._select){\r\n                  hasCheckboxesSelectRow = true;\r\n\r\n               // Otherwise, if Select extension is not enabled\r\n               } else {\r\n                  // Disable row selection for this column\r\n                  ctx.aoColumns[i].checkboxes.selectRow = false;\r\n               }\r\n            }\r\n\r\n            if(ctx.aoColumns[i].checkboxes.selectAll){\r\n               // Save previous HTML content\r\n               $colHeader.data('html', $colHeader.html());\r\n\r\n               // If \"Select all\" control markup is provided\r\n               if(ctx.aoColumns[i].checkboxes.selectAllRender !== null){\r\n                  var selectAllHtml = '';\r\n\r\n                  // If \"selectAllRender\" option is a function\r\n                  if($.isFunction(ctx.aoColumns[i].checkboxes.selectAllRender)){\r\n                     selectAllHtml = ctx.aoColumns[i].checkboxes.selectAllRender();\r\n\r\n                  // Otherwise, if \"selectAllRender\" option is a string\r\n                  } else if(typeof ctx.aoColumns[i].checkboxes.selectAllRender === 'string'){\r\n                     selectAllHtml = ctx.aoColumns[i].checkboxes.selectAllRender;\r\n                  }\r\n\r\n                  $colHeader\r\n                     .html(selectAllHtml)\r\n                     .addClass('dt-checkboxes-select-all')\r\n                     .attr('data-col', i);\r\n               }\r\n            }\r\n         }\r\n      }\r\n\r\n      // If table has at least one checkbox\r\n      if(hasCheckboxes){\r\n\r\n         //\r\n         // EVENT HANDLERS\r\n         //\r\n\r\n         var $table = $(dt.table().node());\r\n         var $tableBody = $(dt.table().body());\r\n         var $tableContainer = $(dt.table().container());\r\n\r\n         // If there is at least one column that has row selection enabled\r\n         if(hasCheckboxesSelectRow){\r\n            $table.addClass('dt-checkboxes-select');\r\n\r\n            // Handle event before row is selected/deselected\r\n            $table.on('user-select.dt.dtCheckboxes', function ( e, dt, type, cell, originalEvent ){\r\n               var cellIdx = cell.index();\r\n               var rowIdx = cellIdx.row;\r\n               var colIdx = self.getSelectRowColIndex();\r\n               var cellData = dt.cell({ row: rowIdx, column: colIdx }).data();\r\n\r\n               // If checkbox in the cell cannot be checked\r\n               if(!self.isCellSelectable(colIdx, cellData)){\r\n                  // Prevent row selection\r\n                  e.preventDefault();\r\n               }\r\n            });\r\n\r\n            // Handle row select/deselect event\r\n            $table.on('select.dt.dtCheckboxes deselect.dt.dtCheckboxes', function(e, api, type, indexes){\r\n               self.onSelect(e, type, indexes);\r\n            });\r\n\r\n            // Disable Select extension information display\r\n            dt.select.info(false);\r\n\r\n            // Update the table information element with selected item summary\r\n            //\r\n            // NOTE: Needed to display correct count of selected rows\r\n            // when using server-side processing mode\r\n            $table.on('draw.dt.dtCheckboxes select.dt.dtCheckboxes deselect.dt.dtCheckboxes', function(){\r\n               self.showInfoSelected();\r\n            });\r\n         }\r\n\r\n         // Handle table draw event\r\n         $table.on('draw.dt.dtCheckboxes', function(e){\r\n            self.onDraw(e);\r\n         });\r\n\r\n         // Handle checkbox click event\r\n         $tableBody.on('click.dtCheckboxes', 'input.dt-checkboxes', function(e){\r\n            self.onClick(e, this);\r\n         });\r\n\r\n         // Handle click on \"Select all\" control\r\n         $tableContainer.on('click.dtCheckboxes', 'thead th.dt-checkboxes-select-all input[type=\"checkbox\"]', function(e){\r\n            self.onClickSelectAll(e, this);\r\n         });\r\n\r\n         // Handle click on heading containing \"Select all\" control\r\n         $tableContainer.on('click.dtCheckboxes', 'thead th.dt-checkboxes-select-all', function(e) {\r\n            $('input[type=\"checkbox\"]', this).not(':disabled').trigger('click');\r\n         });\r\n\r\n         // If row selection is disabled\r\n         if(!hasCheckboxesSelectRow){\r\n            // Handle click on cell containing checkbox\r\n            $tableContainer.on('click.dtCheckboxes', 'tbody td.dt-checkboxes-cell', function(e) {\r\n               $('input[type=\"checkbox\"]', this).not(':disabled').trigger('click');\r\n            });\r\n         }\r\n\r\n         // Handle click on label node in heading containing \"Select all\" control\r\n         // and in cell containing checkbox\r\n         $tableContainer.on('click.dtCheckboxes', 'thead th.dt-checkboxes-select-all label, tbody td.dt-checkboxes-cell label', function(e) {\r\n            // Prevent default behavior\r\n            e.preventDefault();\r\n         });\r\n\r\n         // Handle click on \"Select all\" control in floating fixed header\r\n         $(document).on('click.dtCheckboxes', '.fixedHeader-floating thead th.dt-checkboxes-select-all input[type=\"checkbox\"]', function(e){\r\n            // If FixedHeader is enabled in this instance\r\n            if(ctx._fixedHeader){\r\n               // If header is floating in this instance\r\n               if(ctx._fixedHeader.dom['header'].floating){\r\n                  self.onClickSelectAll(e, this);\r\n               }\r\n            }\r\n         });\r\n\r\n         // Handle click on heading containing \"Select all\" control in floating fixed header\r\n         $(document).on('click.dtCheckboxes', '.fixedHeader-floating thead th.dt-checkboxes-select-all', function(e) {\r\n            // If FixedHeader is enabled in this instance\r\n            if(ctx._fixedHeader){\r\n               // If header is floating in this instance\r\n               if(ctx._fixedHeader.dom['header'].floating){\r\n                  $('input[type=\"checkbox\"]', this).trigger('click');\r\n               }\r\n            }\r\n         });\r\n\r\n         // Handle table initialization event\r\n         $table.on('init.dt.dtCheckboxes', function(){\r\n            // If server-side processing mode is not enabled\r\n            // NOTE: Needed to avoid duplicate call to updateStateCheckboxes() in onDraw()\r\n            if(!ctx.oFeatures.bServerSide){\r\n\r\n               // If state saving is enabled\r\n               if(ctx.oFeatures.bStateSave){\r\n                  self.updateState();\r\n               }\r\n\r\n               // Handle Ajax request completion event\r\n               // NOTE: Needed to update table state\r\n               // if table is reloaded via ajax.reload() API method\r\n               $table.on('xhr.dt', function ( e, settings, json, xhr ) {\r\n                  // For every column where checkboxes are enabled\r\n                  $.each(self.s.columns, function(index, colIdx){\r\n                     // Clear data\r\n                     self.s.data[colIdx] = {};\r\n                  });\r\n\r\n                  // If state saving is enabled\r\n                  if(ctx.oFeatures.bStateSave){\r\n                     // Retrieve stored state\r\n                     var state = dt.state.loaded();\r\n\r\n                     // For every column where checkboxes are enabled\r\n                     $.each(self.s.columns, function(index, colIdx){\r\n                        // If state is loaded and contains data for this column\r\n                        if(state && state.checkboxes && state.checkboxes.hasOwnProperty(colIdx)){\r\n                           // Load previous state\r\n                           self.s.data[colIdx] = state.checkboxes[colIdx];\r\n                        }\r\n                     });\r\n\r\n                     // Update table state on next redraw\r\n                     $table.one('draw.dt.dtCheckboxes', function(e){\r\n                        self.updateState();\r\n                     });\r\n                  }\r\n               });\r\n            }\r\n\r\n            // If state saving is enabled\r\n            if(ctx.oFeatures.bStateSave){\r\n               // Handle state saving event\r\n               $table.on('stateSaveParams.dt.dtCheckboxes', function (e, settings, data){\r\n                  // Store data associated with this plug-in\r\n                  data.checkboxes = self.s.data;\r\n               });\r\n            }\r\n         });\r\n\r\n         // Handle table destroy event\r\n         $table.one('destroy.dt.dtCheckboxes', function(e, settings){\r\n            // Detach event handlers\r\n            $(document).off('click.dtCheckboxes');\r\n            $tableContainer.on('.dtCheckboxes');\r\n            $tableBody.off('.dtCheckboxes');\r\n            $table.off('.dtCheckboxes');\r\n\r\n            // Clear data\r\n            //\r\n            // NOTE: Needed only to reduce memory footprint\r\n            // in case user saves instance of DataTable object.\r\n            self.s.data = {};\r\n\r\n            // Remove added elements\r\n            $('.dt-checkboxes-select-all', $table).each(function(index, el){\r\n               $(el)\r\n                  .html($(el).data('html'))\r\n                  .removeClass('dt-checkboxes-select-all');\r\n            });\r\n         });\r\n      }\r\n   },\r\n\r\n   // Updates array holding data for selected checkboxes\r\n   updateData: function(cells, colIdx, isSelected){\r\n      var self = this;\r\n      var dt = self.s.dt;\r\n      var ctx = self.s.ctx;\r\n\r\n      // If Checkboxes extension is enabled for this column\r\n      if(ctx.aoColumns[colIdx].checkboxes){\r\n         var cellsData = cells.data();\r\n         cellsData.each(function(cellData, index){\r\n            // If checkbox is checked\r\n            if(isSelected){\r\n               ctx.checkboxes.s.data[colIdx][cellData] = 1;\r\n\r\n            // Otherwise, if checkbox is not checked\r\n            } else {\r\n               delete ctx.checkboxes.s.data[colIdx][cellData];\r\n            }\r\n         });\r\n\r\n         // If state saving is enabled\r\n         if(ctx.oFeatures.bStateSave){\r\n            // Save state\r\n            dt.state.save();\r\n         }\r\n      }\r\n   },\r\n\r\n   // Updates row selection\r\n   updateSelect: function(selector, isSelected){\r\n      var self = this;\r\n      var dt = self.s.dt;\r\n      var ctx = self.s.ctx;\r\n\r\n      // If Select extension is enabled\r\n      if(ctx._select){\r\n         // Disable select event hanlder temporarily\r\n         self.s.ignoreSelect = true;\r\n\r\n         if(isSelected){\r\n            dt.rows(selector).select();\r\n         } else {\r\n            dt.rows(selector).deselect();\r\n         }\r\n\r\n         // Re-enable select event handler\r\n         self.s.ignoreSelect = false;\r\n      }\r\n   },\r\n\r\n   // Updates state of single checkbox\r\n   updateCheckbox: function(cells, colIdx, isSelected){\r\n      var self = this;\r\n      var dt = self.s.dt;\r\n      var ctx = self.s.ctx;\r\n\r\n      var cellNodes = cells.nodes();\r\n      if(cellNodes.length){\r\n         $('input.dt-checkboxes', cellNodes).not(':disabled').prop('checked', isSelected);\r\n\r\n         // If selectCallback is a function\r\n         if($.isFunction(ctx.aoColumns[colIdx].checkboxes.selectCallback)){\r\n            ctx.aoColumns[colIdx].checkboxes.selectCallback(cellNodes, isSelected);\r\n         }\r\n      }\r\n   },\r\n\r\n   // Update table state\r\n   updateState: function(){\r\n      var self = this;\r\n      var dt = self.s.dt;\r\n      var ctx = self.s.ctx;\r\n\r\n      self.updateStateCheckboxes({ page: 'all', search: 'none' });\r\n\r\n      $.each(self.s.columns, function(index, colIdx){\r\n         self.updateSelectAll(colIdx);\r\n      });\r\n   },\r\n\r\n   // Updates state of multiple checkboxes\r\n   updateStateCheckboxes: function(opts){\r\n      var self = this;\r\n      var dt = self.s.dt;\r\n      var ctx = self.s.ctx;\r\n\r\n      // Enumerate all cells\r\n      dt.cells('tr', self.s.columns, opts).every(function(rowIdx, colIdx){\r\n         // Get cell data\r\n         var cellData = this.data();\r\n\r\n         // Determine if checkbox in the cell can be checked\r\n         var isCellSelectable = self.isCellSelectable(colIdx, cellData);\r\n\r\n         // If checkbox is selected\r\n         if(ctx.checkboxes.s.data[colIdx].hasOwnProperty(cellData)){\r\n            self.updateCheckbox(this, colIdx, true);\r\n\r\n            // If row selection is enabled\r\n            // and checkbox can be checked\r\n            if(ctx.aoColumns[colIdx].checkboxes.selectRow && isCellSelectable){\r\n               self.updateSelect(rowIdx, true);\r\n            }\r\n         }\r\n\r\n         // If checkbox is disabled\r\n         if(!isCellSelectable){\r\n            $('input.dt-checkboxes', this.node()).prop('disabled', true);\r\n         }\r\n      });\r\n   },\r\n\r\n   // Handles checkbox click event\r\n   onClick: function(e, ctrl){\r\n      var self = this;\r\n      var dt = self.s.dt;\r\n      var ctx = self.s.ctx;\r\n\r\n      var cellSelector;\r\n\r\n      // Get cell\r\n      var $cell = $(ctrl).closest('td');\r\n\r\n      // If cell is in a fixed column using FixedColumns extension\r\n      if($cell.parents('.DTFC_Cloned').length){\r\n         cellSelector = dt.fixedColumns().cellIndex($cell);\r\n\r\n      } else {\r\n         cellSelector = $cell;\r\n      }\r\n\r\n      var cell    = dt.cell(cellSelector);\r\n      var cellIdx = cell.index();\r\n      var colIdx  = cellIdx.column;\r\n\r\n      // If row selection is not enabled\r\n      // NOTE: if row selection is enabled, checkbox selection/deselection\r\n      // would be handled by onSelect event instead\r\n      if(!ctx.aoColumns[colIdx].checkboxes.selectRow){\r\n         cell.checkboxes.select(ctrl.checked);\r\n\r\n         // Prevent click event from propagating to parent\r\n         e.stopPropagation();\r\n\r\n      } else {\r\n         // WORKAROUND:\r\n         // Select extension may keep the row selected\r\n         // when checkbox is unchecked with SHIFT key.\r\n         //\r\n         // We need to update the state of the checkbox AFTER handling\r\n         // select/deselect event from Select extension.\r\n         //\r\n         // Call to setTimeout is needed to let select/deselect event handler\r\n         // update the data first.\r\n         setTimeout(function(){\r\n            // Get cell data\r\n            var cellData = cell.data();\r\n\r\n            // Determine whether data is in the list\r\n            var hasData = self.s.data[colIdx].hasOwnProperty(cellData);\r\n\r\n            // If state of the checkbox needs to be updated\r\n            if(hasData !== ctrl.checked){\r\n               self.updateCheckbox(cell, colIdx, hasData);\r\n               self.updateSelectAll(colIdx);\r\n            }\r\n         }, 0);\r\n      }\r\n   },\r\n\r\n   // Handles row select/deselect event\r\n   onSelect: function(e, type, indexes){\r\n      var self = this;\r\n      var dt = self.s.dt;\r\n      var ctx = self.s.ctx;\r\n\r\n      if(self.s.ignoreSelect){ return; }\r\n\r\n      if(type === 'row'){\r\n         // Get index of the first column that has checkbox and row selection enabled\r\n         var colIdx = self.getSelectRowColIndex();\r\n         if(colIdx !== null){\r\n            var cells = dt.cells(indexes, colIdx);\r\n\r\n            self.updateData(cells, colIdx, (e.type === 'select') ? true : false);\r\n            self.updateCheckbox(cells, colIdx, (e.type === 'select') ? true : false);\r\n            self.updateSelectAll(colIdx);\r\n         }\r\n      }\r\n   },\r\n\r\n   // Handles checkbox click event\r\n   onClickSelectAll: function(e, ctrl){\r\n      var self = this;\r\n      var dt = self.s.dt;\r\n      var ctx = self.s.ctx;\r\n\r\n      // Calculate column index\r\n      var colIdx = null;\r\n      var $th = $(ctrl).closest('th');\r\n\r\n      // If column is fixed using FixedColumns extension\r\n      if($th.parents('.DTFC_Cloned').length){\r\n         var cellIdx = dt.fixedColumns().cellIndex($th);\r\n         colIdx = cellIdx.column;\r\n      } else {\r\n         colIdx = dt.column($th).index();\r\n      }\r\n\r\n      dt.column(colIdx, {\r\n         page: (\r\n            (ctx.aoColumns[colIdx].checkboxes && ctx.aoColumns[colIdx].checkboxes.selectAllPages)\r\n            ? 'all'\r\n            : 'current'\r\n         ),\r\n         search: 'applied'\r\n      }).checkboxes.select(ctrl.checked);\r\n\r\n      // Prevent click event from propagating to parent\r\n      e.stopPropagation();\r\n   },\r\n\r\n   // Handles table draw event\r\n   onDraw: function(e){\r\n      var self = this;\r\n      var dt = self.s.dt;\r\n      var ctx = self.s.ctx;\r\n\r\n      // If server-side processing is enabled\r\n      // or deferred render is enabled\r\n      //\r\n      // TODO: it's not optimal to update state of checkboxes\r\n      // for already created rows in deferred rendering mode\r\n      if(ctx.oFeatures.bServerSide || ctx.oFeatures.bDeferRender){\r\n         self.updateStateCheckboxes({ page: 'current', search: 'none' });\r\n      }\r\n\r\n      $.each(self.s.columns, function(index, colIdx){\r\n         self.updateSelectAll(colIdx);\r\n      });\r\n   },\r\n\r\n   // Updates state of the \"Select all\" controls\r\n   updateSelectAll: function(colIdx){\r\n      var self = this;\r\n      var dt = self.s.dt;\r\n      var ctx = self.s.ctx;\r\n\r\n      // If Checkboxes extension is enabled for this column\r\n      // and \"Select all\" control is enabled for this column\r\n      if(ctx.aoColumns[colIdx].checkboxes && ctx.aoColumns[colIdx].checkboxes.selectAll){\r\n         var cells = dt.cells('tr', colIdx, {\r\n            page: (\r\n               (ctx.aoColumns[colIdx].checkboxes.selectAllPages)\r\n               ? 'all'\r\n               : 'current'\r\n            ),\r\n            search: 'applied'\r\n         });\r\n\r\n         var $tableContainer = dt.table().container();\r\n         var $checkboxesSelectAll = $('.dt-checkboxes-select-all[data-col=\"' + colIdx + '\"] input[type=\"checkbox\"]', $tableContainer);\r\n\r\n         var countChecked = 0;\r\n         var cellsData = cells.data();\r\n         $.each(cellsData, function(index, cellData){\r\n            if(self.s.data[colIdx].hasOwnProperty(cellData)){ countChecked++; }\r\n         });\r\n\r\n         // If FixedHeader is enabled in this instance\r\n         if(ctx._fixedHeader){\r\n            // If header is floating in this instance\r\n            if(ctx._fixedHeader.dom['header'].floating){\r\n               $checkboxesSelectAll = $('.fixedHeader-floating .dt-checkboxes-select-all[data-col=\"' + colIdx + '\"] input[type=\"checkbox\"]');\r\n            }\r\n         }\r\n\r\n         var isSelected;\r\n         var isIndeterminate;\r\n\r\n         // If none of the checkboxes are checked\r\n         if (countChecked === 0) {\r\n            isSelected      = false;\r\n            isIndeterminate = false;\r\n\r\n         // If all of the checkboxes are checked\r\n         } else if (countChecked === cellsData.length) {\r\n            isSelected      = true;\r\n            isIndeterminate = false;\r\n\r\n         // If some of the checkboxes are checked\r\n         } else {\r\n            isSelected      = true;\r\n            isIndeterminate = true;\r\n         }\r\n\r\n         $checkboxesSelectAll.prop({\r\n            'checked': isSelected,\r\n            'indeterminate': isIndeterminate\r\n         });\r\n\r\n         // If selectAllCallback is a function\r\n         if($.isFunction(ctx.aoColumns[colIdx].checkboxes.selectAllCallback)){\r\n            ctx.aoColumns[colIdx].checkboxes.selectAllCallback($checkboxesSelectAll.closest('th').get(0), isSelected, isIndeterminate);\r\n         }\r\n      }\r\n   },\r\n\r\n   // Updates the information element of the DataTable showing information about the\r\n   // items selected. Based on info() method of Select extension.\r\n   showInfoSelected: function(){\r\n      var self = this;\r\n      var dt = self.s.dt;\r\n      var ctx = self.s.ctx;\r\n\r\n      if ( ! ctx.aanFeatures.i ) {\r\n         return;\r\n      }\r\n\r\n      var $output  = $('<span class=\"select-info\"/>');\r\n      var add = function(name, num){\r\n         $output.append( $('<span class=\"select-item\"/>').append( dt.i18n(\r\n            'select.'+name+'s',\r\n            { _: '%d '+name+'s selected', 0: '', 1: '1 '+name+' selected' },\r\n            num\r\n         ) ) );\r\n      };\r\n\r\n      // Get index of the first column that has checkbox and row selection enabled\r\n      var colIdx = self.getSelectRowColIndex();\r\n\r\n      // If there is a column that has checkbox and row selection enabled\r\n      if(colIdx !== null){\r\n         // Count number of selected rows\r\n         var countRows = 0;\r\n         for (var cellData in ctx.checkboxes.s.data[colIdx]){\r\n            if (ctx.checkboxes.s.data[colIdx].hasOwnProperty(cellData)){\r\n               countRows++;\r\n            }\r\n         }\r\n\r\n         add('row', countRows);\r\n\r\n         // Internal knowledge of DataTables to loop over all information elements\r\n         $.each( ctx.aanFeatures.i, function ( i, el ) {\r\n            var $el = $(el);\r\n\r\n            var $existing = $el.children('span.select-info');\r\n            if($existing.length){\r\n               $existing.remove();\r\n            }\r\n\r\n            if($output.text() !== ''){\r\n               $el.append($output);\r\n            }\r\n         });\r\n      }\r\n   },\r\n\r\n   // Determines whether checkbox in the cell can be checked\r\n   isCellSelectable: function(colIdx, cellData){\r\n      var self = this;\r\n      var dt = self.s.dt;\r\n      var ctx = self.s.ctx;\r\n\r\n      // If data is in the list of disabled elements\r\n      if(ctx.checkboxes.s.dataDisabled[colIdx].hasOwnProperty(cellData)){\r\n         return false;\r\n\r\n      // Otherwise, if checkbox can be selected\r\n      } else {\r\n         return true;\r\n      }\r\n   },\r\n\r\n   // Gets cell index\r\n   getCellIndex: function(cell){\r\n      var self = this;\r\n      var dt = self.s.dt;\r\n      var ctx = self.s.ctx;\r\n\r\n      // If FixedColumns extension is available\r\n      if(ctx._oFixedColumns){\r\n         return dt.fixedColumns().cellIndex(cell);\r\n\r\n      } else {\r\n         return dt.cell(cell).index();\r\n      }\r\n   },\r\n\r\n   // Gets index of the first column that has checkbox and row selection enabled\r\n   getSelectRowColIndex: function(){\r\n      var self = this;\r\n      var dt = self.s.dt;\r\n      var ctx = self.s.ctx;\r\n\r\n      var colIdx = null;\r\n\r\n      for(var i = 0; i < ctx.aoColumns.length; i++){\r\n         // If Checkboxes extension is enabled\r\n         // and row selection is enabled for this column\r\n         if(ctx.aoColumns[i].checkboxes && ctx.aoColumns[i].checkboxes.selectRow){\r\n            colIdx = i;\r\n            break;\r\n         }\r\n      }\r\n\r\n      return colIdx;\r\n   },\r\n\r\n   // Updates fixed column if FixedColumns extension is enabled\r\n   // and given column is inside a fixed column\r\n   updateFixedColumn: function(colIdx){\r\n     var self = this;\r\n     var dt = self.s.dt;\r\n     var ctx = self.s.ctx;\r\n\r\n     // If FixedColumns extension is enabled\r\n     if(ctx._oFixedColumns){\r\n        var leftCols = ctx._oFixedColumns.s.iLeftColumns;\r\n        var rightCols = ctx.aoColumns.length - ctx._oFixedColumns.s.iRightColumns - 1;\r\n        if (colIdx < leftCols || colIdx > rightCols){\r\n           dt.fixedColumns().update();\r\n        }\r\n     }\r\n   }\r\n};\r\n\r\n\r\n/**\r\n * Checkboxes default settings for initialisation\r\n *\r\n * @namespace\r\n * @name Checkboxes.defaults\r\n * @static\r\n */\r\nCheckboxes.defaults = {\r\n   /**\r\n    * Enable / disable row selection\r\n    *\r\n    * @type {Boolean}\r\n    * @default `false`\r\n    */\r\n   selectRow: false,\r\n\r\n   /**\r\n    * Enable / disable \"select all\" control in the header\r\n    *\r\n    * @type {Boolean}\r\n    * @default `true`\r\n    */\r\n   selectAll: true,\r\n\r\n   /**\r\n    * Enable / disable ability to select checkboxes from all pages\r\n    *\r\n    * @type {Boolean}\r\n    * @default `true`\r\n    */\r\n   selectAllPages: true,\r\n\r\n   /**\r\n    * Checkbox select/deselect callback\r\n    *\r\n    * @type {Function}\r\n    * @default  `null`\r\n    */\r\n   selectCallback: null,\r\n\r\n   /**\r\n    * \"Select all\" control select/deselect callback\r\n    *\r\n    * @type {Function}\r\n    * @default  `null`\r\n    */\r\n   selectAllCallback: null,\r\n\r\n   /**\r\n    * \"Select all\" control markup\r\n    *\r\n    * @type {mixed}\r\n    * @default `<input type=\"checkbox\">`\r\n    */\r\n   selectAllRender: '<input type=\"checkbox\">'\r\n};\r\n\r\n\r\n/*\r\n * API\r\n */\r\nvar Api = $.fn.dataTable.Api;\r\n\r\n// Doesn't do anything - work around for a bug in DT... Not documented\r\nApi.register( 'checkboxes()', function () {\r\n   return this;\r\n} );\r\n\r\nApi.registerPlural( 'columns().checkboxes.select()', 'column().checkboxes.select()', function ( state ) {\r\n   if(typeof state === 'undefined'){ state = true; }\r\n\r\n   return this.iterator( 'column-rows', function ( ctx, colIdx, i, j, rowsIdx ) {\r\n      if(ctx.checkboxes){\r\n         // Prepare a list of all cells\r\n         var selector = [];\r\n         $.each(rowsIdx, function(index, rowIdx){\r\n            selector.push({ row: rowIdx, column: colIdx });\r\n         });\r\n\r\n         var cells = this.cells(selector);\r\n         var cellsData = cells.data();\r\n\r\n         // Prepare a list of cells that contain checkboxes that can be selected\r\n         var rowsSelectableIdx = [];\r\n         selector = [];\r\n         $.each(cellsData, function(index, cellData){\r\n            // If checkbox in the cell can be checked\r\n            if(ctx.checkboxes.isCellSelectable(colIdx, cellData)){\r\n               selector.push({ row: rowsIdx[index], column: colIdx });\r\n               rowsSelectableIdx.push(rowsIdx[index]);\r\n            }\r\n         });\r\n\r\n         cells = this.cells(selector);\r\n\r\n         ctx.checkboxes.updateData(cells, colIdx, state);\r\n         ctx.checkboxes.updateCheckbox(cells, colIdx, state);\r\n\r\n         // If row selection is enabled\r\n         if(ctx.aoColumns[colIdx].checkboxes.selectRow){\r\n            ctx.checkboxes.updateSelect(rowsSelectableIdx, state);\r\n         }\r\n\r\n         // If FixedColumns extension is enabled\r\n         if(ctx._oFixedColumns){\r\n            // Use timeout to let FixedColumns construct the header\r\n            // before we update the \"Select all\" checkbox\r\n            setTimeout(function(){ ctx.checkboxes.updateSelectAll(colIdx); }, 0);\r\n\r\n         } else {\r\n            ctx.checkboxes.updateSelectAll(colIdx);\r\n         }\r\n\r\n         ctx.checkboxes.updateFixedColumn(colIdx);\r\n      }\r\n   }, 1 );\r\n} );\r\n\r\nApi.registerPlural( 'cells().checkboxes.select()', 'cell().checkboxes.select()', function ( state ) {\r\n   if(typeof state === 'undefined'){ state = true; }\r\n\r\n   return this.iterator( 'cell', function ( ctx, rowIdx, colIdx ) {\r\n      if(ctx.checkboxes){\r\n         var cells = this.cells([{ row: rowIdx, column: colIdx }]);\r\n         var cellData = this.cell({ row: rowIdx, column: colIdx }).data();\r\n\r\n         // If checkbox in the cell can be checked\r\n         if(ctx.checkboxes.isCellSelectable(colIdx, cellData)){\r\n            ctx.checkboxes.updateData(cells, colIdx, state);\r\n            ctx.checkboxes.updateCheckbox(cells, colIdx, state);\r\n\r\n            // If row selection is enabled\r\n            if(ctx.aoColumns[colIdx].checkboxes.selectRow){\r\n               ctx.checkboxes.updateSelect(rowIdx, state);\r\n            }\r\n\r\n            // If FixedColumns extension is enabled\r\n            if(ctx._oFixedColumns){\r\n               // Use timeout to let FixedColumns construct the header\r\n               // before we update the \"Select all\" checkbox\r\n               setTimeout(function(){ ctx.checkboxes.updateSelectAll(colIdx); }, 0);\r\n\r\n            } else {\r\n               ctx.checkboxes.updateSelectAll(colIdx);\r\n            }\r\n\r\n            ctx.checkboxes.updateFixedColumn(colIdx);\r\n         }\r\n      }\r\n   }, 1 );\r\n} );\r\n\r\nApi.registerPlural( 'cells().checkboxes.enable()', 'cell().checkboxes.enable()', function ( state ) {\r\n   if(typeof state === 'undefined'){ state = true; }\r\n\r\n   return this.iterator( 'cell', function ( ctx, rowIdx, colIdx ) {\r\n      if(ctx.checkboxes){\r\n         var cell = this.cell({ row: rowIdx, column: colIdx });\r\n\r\n         // Get cell data\r\n         var cellData = cell.data();\r\n\r\n         // If checkbox should be enabled\r\n         if(state){\r\n            delete ctx.checkboxes.s.dataDisabled[colIdx][cellData];\r\n\r\n         // Otherwise, if checkbox should be disabled\r\n         } else {\r\n            ctx.checkboxes.s.dataDisabled[colIdx][cellData] = 1;\r\n         }\r\n\r\n         // Determine if cell node is available\r\n         // (deferRender is not enabled or cell has been already created)\r\n         var cellNode = cell.node();\r\n         if(cellNode){\r\n            $('input.dt-checkboxes', cellNode).prop('disabled', !state);\r\n         }\r\n\r\n         // If row selection is enabled\r\n         // and checkbox can be checked\r\n         if(ctx.aoColumns[colIdx].checkboxes.selectRow){\r\n            // If data is in the list\r\n            if(ctx.checkboxes.s.data[colIdx].hasOwnProperty(cellData)){\r\n               // Update selection based on current state:\r\n               // if checkbox is enabled then select row;\r\n               // otherwise, deselect row\r\n               ctx.checkboxes.updateSelect(rowIdx, state);\r\n            }\r\n         }\r\n      }\r\n   }, 1 );\r\n} );\r\n\r\nApi.registerPlural( 'cells().checkboxes.disable()', 'cell().checkboxes.disable()', function ( state ) {\r\n   if(typeof state === 'undefined'){ state = true; }\r\n   return this.checkboxes.enable(!state);\r\n} );\r\n\r\nApi.registerPlural( 'columns().checkboxes.deselect()', 'column().checkboxes.deselect()', function ( state ) {\r\n   if(typeof state === 'undefined'){ state = true; }\r\n   return this.checkboxes.select(!state);\r\n} );\r\n\r\nApi.registerPlural( 'cells().checkboxes.deselect()', 'cell().checkboxes.deselect()', function ( state ) {\r\n   if(typeof state === 'undefined'){ state = true; }\r\n   return this.checkboxes.select(!state);\r\n} );\r\n\r\nApi.registerPlural( 'columns().checkboxes.deselectAll()', 'column().checkboxes.deselectAll()', function () {\r\n   return this.iterator( 'column', function (ctx, colIdx){\r\n      // If Checkboxes extension is enabled for this column\r\n      if(ctx.aoColumns[colIdx].checkboxes){\r\n         ctx.checkboxes.s.data[colIdx] = {};\r\n\r\n         this.column(colIdx).checkboxes.select(false);\r\n      }\r\n   }, 1 );\r\n} );\r\n\r\nApi.registerPlural( 'columns().checkboxes.selected()', 'column().checkboxes.selected()', function () {\r\n   return this.iterator( 'column', function (ctx, colIdx){\r\n      if(ctx.aoColumns[colIdx].checkboxes){\r\n         var data = [];\r\n\r\n         $.each(ctx.checkboxes.s.data[colIdx], function(cellData, countRows){\r\n            // If checkbox in the cell can be checked\r\n            if(ctx.checkboxes.isCellSelectable(colIdx, cellData)){\r\n               data.push(cellData);\r\n            }\r\n         });\r\n\r\n         return data;\r\n      } else {\r\n         return [];\r\n      }\r\n   }, 1 );\r\n} );\r\n\r\n\r\n/**\r\n * Version information\r\n *\r\n * @name Checkboxes.version\r\n * @static\r\n */\r\nCheckboxes.version = '1.2.9';\r\n\r\n\r\n\r\n$.fn.DataTable.Checkboxes = Checkboxes;\r\n$.fn.dataTable.Checkboxes = Checkboxes;\r\n\r\n\r\n// Attach a listener to the document which listens for DataTables initialisation\r\n// events so we can automatically initialise\r\n$(document).on( 'preInit.dt.dtCheckboxes', function (e, settings, json) {\r\n   if ( e.namespace !== 'dt' ) {\r\n      return;\r\n   }\r\n\r\n   new Checkboxes( settings );\r\n} );\r\n\r\n\r\nreturn Checkboxes;\r\n}));"],"file":"dataTables.checkboxes.min.js"}