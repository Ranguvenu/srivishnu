{"version":3,"sources":["../src/newcat.js"],"names":["define","$","Str","ModalFactory","ModalEvents","Fragment","Ajax","Y","NewCat","args","contextid","categoryid","self","init","selector","prototype","modal","console","log","editid","data","instituteid","alert","get_string","then","title","create","type","types","SAVE_CANCEL","body","getBody","bind","show","setLarge","getRoot","on","hidden","setBody","shown","append","save","submitForm","submitFormAjax","formdata","params","jsonformdata","JSON","stringify","loadFragment","handleFormSubmissionResponse","hide","use","M","core_formchangechecker","reset_form_dirty_state","document","location","reload","handleFormSubmissionFailure","e","preventDefault","formData","find","serialize","call","methodname","done","fail","submit","load"],"mappings":"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","sourcesContent":["/**\r\n * Add a create new group modal to the page.\r\n *\r\n * @module     local_location/location\r\n * @class      NewInstitute\r\n * @package    local_location\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\ndefine(['jquery', 'core/str', 'core/modal_factory', 'core/modal_events', 'core/fragment', 'core/ajax', 'core/yui'],\r\n        function($, Str, ModalFactory, ModalEvents, Fragment, Ajax, Y) {\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {String} selector used to find triggers for the new group modal.\r\n     * @param {int} contextid\r\n     *\r\n     * Each call to init gets it's own instance of this class.\r\n     */\r\n    var NewCat = function(args) {\r\n        this.contextid = args.contextid;\r\n\r\n\r\n        this.categoryid = args.categoryid;\r\n        var self = this;\r\n        self.init(args.selector);\r\n    };\r\n\r\n    /**\r\n     * @var {Modal} modal\r\n     * @private\r\n     */\r\n    NewCat.prototype.modal = null;\r\n\r\n    /**\r\n     * @var {int} contextid\r\n     * @private\r\n     */\r\n    NewCat.prototype.contextid = -1;\r\n\r\n    /**\r\n     * Initialise the class.\r\n     *\r\n     * @param {String} selector used to find triggers for the new group modal.\r\n     * @private\r\n     * @return {Promise}\r\n     */\r\n    NewCat.prototype.init = function(args) {\r\n        console.log(args);\r\n        //var triggers = $(selector);\r\n        var self = this;\r\n\r\n\r\n\r\n        // Fetch the title string.\r\n        // $('.'+args.selector).click(function(){\r\n\r\n\r\n            var editid = $(this).data('value');\r\n            if (editid) {\r\n                self.instituteid = editid;\r\n                console.log(self.instituteid);\r\n                alert(self.instituteid);\r\n            }\r\n            return Str.get_string('adnewcat', 'local_program').then(function(title) {\r\n                // Create the modal.\r\n                return ModalFactory.create({\r\n                    type: ModalFactory.types.SAVE_CANCEL,\r\n                    title: title,\r\n                    body: self.getBody()\r\n                });\r\n            }.bind(self)).then(function(modal) {\r\n\r\n                // Keep a reference to the modal.\r\n                self.modal = modal;\r\n                self.modal.show();\r\n                // Forms are big, we want a big modal.\r\n                self.modal.setLarge();\r\n\r\n                // We want to reset the form every time it is opened.\r\n                self.modal.getRoot().on(ModalEvents.hidden, function() {\r\n                    self.modal.setBody(self.getBody());\r\n                }.bind(this));\r\n\r\n                // We want to hide the submit buttons every time it is opened.\r\n                self.modal.getRoot().on(ModalEvents.shown, function() {\r\n                    self.modal.getRoot().append('<style>[data-fieldtype=submit] { display: none ! important; }</style>');\r\n                }.bind(this));\r\n\r\n\r\n                // We catch the modal save event, and use it to submit the form inside the modal.\r\n                // Triggering a form submission will give JS validation scripts a chance to check for errors.\r\n                self.modal.getRoot().on(ModalEvents.save, self.submitForm.bind(self));\r\n                // We also catch the form submit event and use it to submit the form with ajax.\r\n                self.modal.getRoot().on('submit', 'form', self.submitFormAjax.bind(self));\r\n                return this.modal;\r\n            }.bind(this));\r\n\r\n\r\n        // });\r\n\r\n    };\r\n\r\n    /**\r\n     * @method getBody\r\n     * @private\r\n     * @return {Promise}\r\n     */\r\n    NewCat.prototype.getBody = function(formdata) {\r\n        if (typeof formdata === \"undefined\") {\r\n            formdata = {};\r\n        }\r\n        // alert(formdata);\r\n        // Get the content of the modal.\r\n        var params = {instituteid:this.instituteid, jsonformdata: JSON.stringify(formdata)};\r\n        return Fragment.loadFragment('local_curriculum', 'new_catform', this.contextid, params);\r\n    };\r\n\r\n    /**\r\n     * @method handleFormSubmissionResponse\r\n     * @private\r\n     * @return {Promise}\r\n     */\r\n    NewCat.prototype.handleFormSubmissionResponse = function() {\r\n        this.modal.hide();\r\n        // We could trigger an event instead.\r\n        // Yuk.\r\n        Y.use('moodle-core-formchangechecker', function() {\r\n            M.core_formchangechecker.reset_form_dirty_state();\r\n        });\r\n        document.location.reload();\r\n    };\r\n\r\n    /**\r\n     * @method handleFormSubmissionFailure\r\n     * @private\r\n     * @return {Promise}\r\n     */\r\n    NewCat.prototype.handleFormSubmissionFailure = function(data) {\r\n        // Oh noes! Epic fail :(\r\n        // Ah wait - this is normal. We need to re-display the form with errors!\r\n        this.modal.setBody(this.getBody(data));\r\n    };\r\n\r\n    /**\r\n     * Private method\r\n     *\r\n     * @method submitFormAjax\r\n     * @private\r\n     * @param {Event} e Form submission event.\r\n     */\r\n    NewCat.prototype.submitFormAjax = function(e) {\r\n        // We don't want to do a real form submission.\r\n        e.preventDefault();\r\n\r\n        // Convert all the form elements values to a serialised string.\r\n        var formData = this.modal.getRoot().find('form').serialize();\r\n        // alert(this.contextid);\r\n        // Now we can continue...\r\n        Ajax.call([{\r\n            methodname: 'local_location_submit_catform_form',\r\n            args: {contextid: this.contextid, jsonformdata: JSON.stringify(formData)},\r\n            done: this.handleFormSubmissionResponse.bind(this, formData),\r\n            fail: this.handleFormSubmissionFailure.bind(this, formData)\r\n        }]);\r\n    };\r\n\r\n    /**\r\n     * This triggers a form submission, so that any mform elements can do final tricks before the form submission is processed.\r\n     *\r\n     * @method submitForm\r\n     * @param {Event} e Form submission event.\r\n     * @private\r\n     */\r\n    NewCat.prototype.submitForm = function(e) {\r\n        e.preventDefault();\r\n        var self = this;\r\n        self.modal.getRoot().find('form').submit();\r\n    };\r\n\r\n    return /** @alias module:local_location/newlocation */ {\r\n        // Public variables and functions.\r\n        /**\r\n         * Attach event listeners to initialise this module.\r\n         *\r\n         * @method init\r\n         * @param {string} selector The CSS selector used to find nodes that will trigger this module.\r\n         * @param {int} contextid The contextid for the course.\r\n         * @return {Promise}\r\n         */\r\n        init: function(args) {\r\n\r\n            // alert(args.contextid);\r\n            return new NewCat(args);\r\n        },\r\n        load: function(){\r\n\r\n        }\r\n    };\r\n});"],"file":"newcat.min.js"}